{"version":3,"file":"qr-thread.js","sources":["../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/iovec.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/event.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/custom_event.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/env/emscripten_notify_memory_growth.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/env/throw_exception_with_stack_trace.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/instantiate-wasi.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/util.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/environ_sizes_get.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_close.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/errorno.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_read.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_seek.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_write.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/proc_exit.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/instantiate-wasm.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/native-array.js","../src/thread-worker/thread-worker/instance.ts","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.5.4/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/environ_get.js","../src/thread-worker/thread-worker/barcode-formats.ts","../src/thread-worker/thread-worker/encoder.ts","../src/thread-worker/thread-worker/scanner.ts","../src/thread-worker/thread-worker/shared.ts","../src/thread-worker/thread-worker/index.ts"],"sourcesContent":["import { getPointerSize, readPointer, readUint32 } from \"../util.js\";\nexport function parse(info, ptr) {\n    return {\n        bufferStart: readPointer(info.instance, ptr),\n        bufferLength: readUint32(info.instance, ptr + getPointerSize(info.instance))\n    };\n}\nexport function* parseArray(info, ptr, count) {\n    const sizeofStruct = getPointerSize(info.instance) + 4;\n    for (let i = 0; i < count; ++i) {\n        yield parse(info, ptr + (i * sizeofStruct));\n    }\n}\n","// Needed for extremely limited environments, like Worklets.\n// This seems to exist in Chrome but not, e.g., Firefox, possibly Safari\nglobalThis.Event ??= class Event {\n    constructor(type_, eventInitDict) {\n        this.bubbles = eventInitDict?.bubbles || false;\n        this.cancelBubble = false;\n        this.cancelable = eventInitDict?.cancelable || false;\n        this.composed = eventInitDict?.composed || false;\n        this.currentTarget = null;\n        this.defaultPrevented = false;\n        this.eventPhase = Event.NONE;\n        this.isTrusted = true;\n        this.returnValue = false;\n        this.srcElement = null;\n        this.target = null;\n        this.timeStamp = 0;\n        this.type = type_;\n    }\n    static NONE = 0;\n    static CAPTURING_PHASE = 1;\n    static AT_TARGET = 2;\n    static BUBBLING_PHASE = 3;\n    bubbles;\n    cancelBubble;\n    cancelable;\n    composed;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    srcElement;\n    target;\n    timeStamp;\n    type;\n    composedPath() { return []; }\n    initEvent(type_, bubbles, cancelable) { this.type = type_; this.bubbles = bubbles || this.bubbles; this.cancelable = cancelable || this.cancelable; }\n    preventDefault() { this.defaultPrevented = true; }\n    stopImmediatePropagation() { }\n    stopPropagation() { }\n};\nexport {};\n","import \"./event.js\";\n// Worklets don't define `CustomEvent`, even when they do define `Event` itself...\nglobalThis.CustomEvent ??= class CustomEvent extends Event {\n    constructor(type, eventInitDict) {\n        super(type, eventInitDict);\n        this.detail = eventInitDict?.detail;\n    }\n    detail;\n    initCustomEvent(_type, _bubbles, _cancelable, detail) {\n        // this.type, this.bubbles, and this.cancelable are all readonly...\n        this.detail = (detail ?? this.detail);\n    }\n};\n","import \"../custom_event.js\";\nexport class MemoryGrowthEvent extends CustomEvent {\n    constructor(impl, index) {\n        super(\"MemoryGrowthEvent\", { cancelable: false, detail: { index } });\n    }\n}\nexport function emscripten_notify_memory_growth(index) {\n    this.dispatchEvent(new MemoryGrowthEvent(this, index));\n}\n","import \"../custom_event.js\";\nexport class WebAssemblyExceptionEvent extends CustomEvent {\n    constructor(impl, exception) {\n        super(\"WebAssemblyExceptionEvent\", { cancelable: false, detail: { exception } });\n    }\n}\nexport function __throw_exception_with_stack_trace(ex) {\n    this.dispatchEvent(new WebAssemblyExceptionEvent(this, ex));\n}\n","const wasi = Symbol(\"wasi-impl\");\n/**\n * Instantiate the WASI interface, binding all its functions to the WASM instance itself.\n *\n * Must be used in conjunction with, e.g., `WebAssembly.instantiate`. Because that and this both require each other circularly,\n * `instantiateStreamingWithWasi` and `instantiateWithWasi` are convenience functions that do both at once.\n *\n * The WASI interface functions can't be used alone -- they need context like (what memory is this a pointer in) and such.\n *\n * This function provides that context to an import before it's passed to an `Instance` for construction.\n *\n * @remarks Intended usage:\n *\n * ```typescript\n * import { fd_write, proc_exit } from \"basic-event-wasi\"\n * // Waiting for https://github.com/tc39/proposal-promise-with-resolvers...\n * let resolve: (info: WebAssemblyInstantiatedSource) => void;\n * let reject: (error: any) => void;\n * let promise = new Promise<WebAssemblyInstantiatedSource>((res, rej) => {\n *     resolve = res;\n *     reject = rej;\n * });\n *\n * WebAssembly.instantiateStreaming(source, { ...makeWasiInterface(promise.then(s => s.instance), { fd_write, proc_exit }) });\n * ```\n * ([Please please please please please](https://github.com/tc39/proposal-promise-with-resolvers))\n *\n * @param wasmInstance\n * @param unboundImports\n * @returns\n */\nexport function instantiateWasi(wasmInstance, unboundImports, { dispatchEvent } = {}) {\n    if (!dispatchEvent && !(\"dispatchEvent\" in globalThis)) {\n        console.warn(`globalThis.dispatchEvent does not exist here -- events from WebAssembly will go unhandled.`);\n    }\n    dispatchEvent ??= function dispatchEvent(event) {\n        if (\"dispatchEvent\" in globalThis) {\n            return globalThis.dispatchEvent(event);\n        }\n        else {\n            console.warn(`Unhandled event: ${event}`);\n            return false;\n        }\n    };\n    let resolve;\n    const p = {\n        instance: null,\n        module: null,\n        //wasiSubset: unboundImports,\n        cachedMemoryView: null,\n        dispatchEvent(e) { return dispatchEvent(e); }\n    };\n    wasmInstance.then((obj) => {\n        const { instance, module } = obj;\n        p.instance = instance;\n        p.module = module;\n        instance[wasi] = p;\n        p.cachedMemoryView = new DataView(instance.exports.memory.buffer);\n        console.assert((\"_initialize\" in p.instance.exports) != \"_start\" in p.instance.exports);\n        if (\"_initialize\" in p.instance.exports) {\n            p.instance.exports._initialize();\n        }\n        else if (\"_start\" in p.instance.exports) {\n            p.instance.exports._start();\n        }\n        resolve(obj);\n    });\n    // All the functions we've been passed were imported and haven't been bound yet.\n    // Return a new object with each member bound to the private information we pass around.\n    const wasi_snapshot_preview1 = bindAllFuncs(p, unboundImports.wasi_snapshot_preview1);\n    const env = bindAllFuncs(p, unboundImports.env);\n    const boundImports = { wasi_snapshot_preview1, env };\n    return {\n        imports: boundImports,\n        // Until this resolves, no WASI functions can be called (and by extension no w'asm exports can be called)\n        // It resolves immediately after the input promise to the instance&module resolves\n        wasiReady: new Promise((res) => { resolve = res; })\n    };\n}\nexport function getImpl(instance) {\n    return instance[wasi];\n}\n// Given an object, binds each function in that object to p (shallowly).\nfunction bindAllFuncs(p, r) {\n    return Object.fromEntries(Object.entries(r).map(([key, func]) => { return [key, (typeof func == \"function\" ? func.bind(p) : func)]; }));\n}\n","import { getImpl } from \"./instantiate-wasi.js\";\nexport function getMemory(instance) {\n    return getImpl(instance).cachedMemoryView;\n}\nexport function copyToWasm(instance, destinationAddress, sourceData) {\n    (new Uint8Array(getMemory(instance).buffer, destinationAddress, sourceData.byteLength)).set(sourceData);\n}\nexport function readUint64(instance, ptr) { return getMemory(instance).getBigUint64(ptr, true); }\nexport function readInt64(instance, ptr) { return getMemory(instance).getBigInt64(ptr, true); }\nexport function readUint32(instance, ptr) { return getMemory(instance).getUint32(ptr, true); }\nexport function readInt32(instance, ptr) { return getMemory(instance).getInt32(ptr, true); }\nexport function readUint16(instance, ptr) { return getMemory(instance).getUint16(ptr, true); }\nexport function readInt16(instance, ptr) { return getMemory(instance).getInt16(ptr, true); }\nexport function readUint8(instance, ptr) { return getMemory(instance).getUint8(ptr); }\nexport function readInt8(instance, ptr) { return getMemory(instance).getInt8(ptr); }\nexport function writeUint64(instance, ptr, value) { return getMemory(instance).setBigUint64(ptr, value, true); }\nexport function writeInt64(instance, ptr, value) { return getMemory(instance).setBigInt64(ptr, value, true); }\nexport function writeUint32(instance, ptr, value) { return getMemory(instance).setUint32(ptr, value, true); }\nexport function writeInt32(instance, ptr, value) { return getMemory(instance).setInt32(ptr, value, true); }\nexport function writeUint16(instance, ptr, value) { return getMemory(instance).setUint16(ptr, value, true); }\nexport function writeInt16(instance, ptr, value) { return getMemory(instance).setInt16(ptr, value, true); }\nexport function writeUint8(instance, ptr, value) { return getMemory(instance).setUint8(ptr, value); }\nexport function writeInt8(instance, ptr, value) { return getMemory(instance).setInt8(ptr, value); }\nexport function readPointer(instance, ptr) { return getMemory(instance).getUint32(ptr, true); }\nexport function getPointerSize(_instance) { return 4; }\nexport function getInstanceExports(instance) {\n    return instance.exports;\n}\n","import { writeUint32 } from \"../../util.js\";\nexport function environ_sizes_get(environCountOutput, environSizeOutput) {\n    writeUint32(this.instance, environCountOutput, 0);\n    writeUint32(this.instance, environSizeOutput, 0);\n    return 0;\n}\n","import \"../custom_event.js\";\nexport class FileDescriptorCloseEvent extends CustomEvent {\n    constructor(fileDescriptor) {\n        super(\"FileDescriptorCloseEvent\", { cancelable: true, detail: { fileDescriptor } });\n    }\n}\n/** POSIX close */\nexport function fd_close(fd) {\n    const event = new FileDescriptorCloseEvent(fd);\n    if (this.dispatchEvent(event)) {\n    }\n}\n","export var errorno;\n(function (errorno) {\n    errorno[errorno[\"success\"] = 0] = \"success\";\n    errorno[errorno[\"toobig\"] = 1] = \"toobig\";\n    errorno[errorno[\"acces\"] = 2] = \"acces\";\n    errorno[errorno[\"addrinuse\"] = 3] = \"addrinuse\";\n    errorno[errorno[\"addrnotavail\"] = 4] = \"addrnotavail\";\n    errorno[errorno[\"afnosupport\"] = 5] = \"afnosupport\";\n    errorno[errorno[\"again\"] = 6] = \"again\";\n    errorno[errorno[\"already\"] = 7] = \"already\";\n    errorno[errorno[\"badf\"] = 8] = \"badf\";\n    errorno[errorno[\"badmsg\"] = 9] = \"badmsg\";\n    errorno[errorno[\"busy\"] = 10] = \"busy\";\n    errorno[errorno[\"canceled\"] = 11] = \"canceled\";\n    errorno[errorno[\"child\"] = 12] = \"child\";\n    errorno[errorno[\"connaborted\"] = 13] = \"connaborted\";\n    errorno[errorno[\"connrefused\"] = 14] = \"connrefused\";\n    errorno[errorno[\"connreset\"] = 15] = \"connreset\";\n    errorno[errorno[\"deadlk\"] = 16] = \"deadlk\";\n    errorno[errorno[\"destaddrreq\"] = 17] = \"destaddrreq\";\n    errorno[errorno[\"dom\"] = 18] = \"dom\";\n    errorno[errorno[\"dquot\"] = 19] = \"dquot\";\n    errorno[errorno[\"exist\"] = 20] = \"exist\";\n    errorno[errorno[\"fault\"] = 21] = \"fault\";\n    errorno[errorno[\"fbig\"] = 22] = \"fbig\";\n    errorno[errorno[\"hostunreach\"] = 23] = \"hostunreach\";\n    errorno[errorno[\"idrm\"] = 24] = \"idrm\";\n    errorno[errorno[\"ilseq\"] = 25] = \"ilseq\";\n    errorno[errorno[\"inprogress\"] = 26] = \"inprogress\";\n    errorno[errorno[\"intr\"] = 27] = \"intr\";\n    errorno[errorno[\"inval\"] = 28] = \"inval\";\n    errorno[errorno[\"io\"] = 29] = \"io\";\n    errorno[errorno[\"isconn\"] = 30] = \"isconn\";\n    errorno[errorno[\"isdir\"] = 31] = \"isdir\";\n    errorno[errorno[\"loop\"] = 32] = \"loop\";\n    errorno[errorno[\"mfile\"] = 33] = \"mfile\";\n    errorno[errorno[\"mlink\"] = 34] = \"mlink\";\n    errorno[errorno[\"msgsize\"] = 35] = \"msgsize\";\n    errorno[errorno[\"multihop\"] = 36] = \"multihop\";\n    errorno[errorno[\"nametoolong\"] = 37] = \"nametoolong\";\n    errorno[errorno[\"netdown\"] = 38] = \"netdown\";\n    errorno[errorno[\"netreset\"] = 39] = \"netreset\";\n    errorno[errorno[\"netunreach\"] = 40] = \"netunreach\";\n    errorno[errorno[\"nfile\"] = 41] = \"nfile\";\n    errorno[errorno[\"nobufs\"] = 42] = \"nobufs\";\n    errorno[errorno[\"nodev\"] = 43] = \"nodev\";\n    errorno[errorno[\"noent\"] = 44] = \"noent\";\n    errorno[errorno[\"noexec\"] = 45] = \"noexec\";\n    errorno[errorno[\"nolck\"] = 46] = \"nolck\";\n    errorno[errorno[\"nolink\"] = 47] = \"nolink\";\n    errorno[errorno[\"nomem\"] = 48] = \"nomem\";\n    errorno[errorno[\"nomsg\"] = 49] = \"nomsg\";\n    errorno[errorno[\"noprotoopt\"] = 50] = \"noprotoopt\";\n    errorno[errorno[\"nospc\"] = 51] = \"nospc\";\n    errorno[errorno[\"nosys\"] = 52] = \"nosys\";\n    errorno[errorno[\"notconn\"] = 53] = \"notconn\";\n    errorno[errorno[\"notdir\"] = 54] = \"notdir\";\n    errorno[errorno[\"notempty\"] = 55] = \"notempty\";\n    errorno[errorno[\"notrecoverable\"] = 56] = \"notrecoverable\";\n    errorno[errorno[\"notsock\"] = 57] = \"notsock\";\n    errorno[errorno[\"notsup\"] = 58] = \"notsup\";\n    errorno[errorno[\"notty\"] = 59] = \"notty\";\n    errorno[errorno[\"nxio\"] = 60] = \"nxio\";\n    errorno[errorno[\"overflow\"] = 61] = \"overflow\";\n    errorno[errorno[\"ownerdead\"] = 62] = \"ownerdead\";\n    errorno[errorno[\"perm\"] = 63] = \"perm\";\n    errorno[errorno[\"pipe\"] = 64] = \"pipe\";\n    errorno[errorno[\"proto\"] = 65] = \"proto\";\n    errorno[errorno[\"protonosupport\"] = 66] = \"protonosupport\";\n    errorno[errorno[\"prototype\"] = 67] = \"prototype\";\n    errorno[errorno[\"range\"] = 68] = \"range\";\n    errorno[errorno[\"rofs\"] = 69] = \"rofs\";\n    errorno[errorno[\"spipe\"] = 70] = \"spipe\";\n    errorno[errorno[\"srch\"] = 71] = \"srch\";\n    errorno[errorno[\"stale\"] = 72] = \"stale\";\n    errorno[errorno[\"timedout\"] = 73] = \"timedout\";\n    errorno[errorno[\"txtbsy\"] = 74] = \"txtbsy\";\n    errorno[errorno[\"xdev\"] = 75] = \"xdev\";\n    errorno[errorno[\"notcapable\"] = 76] = \"notcapable\";\n})(errorno || (errorno = {}));\n","import { writeUint32, writeUint8 } from \"../../util.js\";\nimport \"../custom_event.js\";\nimport { parseArray } from \"../iovec.js\";\nexport class FileDescriptorReadEvent extends CustomEvent {\n    _bytesWritten = 0;\n    constructor(impl, fileDescriptor, requestedBufferInfo) {\n        super(\"FileDescriptorReadEvent\", {\n            bubbles: false,\n            cancelable: true,\n            detail: {\n                fileDescriptor,\n                requestedBuffers: requestedBufferInfo,\n                readIntoMemory: (inputBuffers) => {\n                    // 100% untested, probably doesn't work if I'm being honest\n                    for (let i = 0; i < requestedBufferInfo.length; ++i) {\n                        if (i >= inputBuffers.length)\n                            break;\n                        const buffer = inputBuffers[i];\n                        for (let j = 0; j < Math.min(buffer.byteLength, inputBuffers[j].byteLength); ++j) {\n                            writeUint8(impl.instance, requestedBufferInfo[i].bufferStart + j, inputBuffers[i][j]);\n                            ++this._bytesWritten;\n                        }\n                    }\n                }\n            }\n        });\n    }\n    bytesWritten() {\n        return this._bytesWritten;\n    }\n}\nexport class UnhandledFileReadEvent extends Error {\n    constructor(fd) {\n        super(`Unhandled read to file descriptor #${fd}.`);\n    }\n}\n/** POSIX readv */\nexport function fd_read(fd, iov, iovcnt, pnum) {\n    let nWritten = 0;\n    const gen = parseArray(this, iov, iovcnt);\n    // Get all the data to read in its separate buffers\n    //const asTypedArrays = [...gen].map(({ bufferStart, bufferLength }) => { nWritten += bufferLength; return new Uint8Array(this.getMemory().buffer, bufferStart, bufferLength) });\n    const event = new FileDescriptorReadEvent(this, fd, [...gen]);\n    if (this.dispatchEvent(event)) {\n        nWritten = 0;\n        /*if (fd == 0) {\n\n        }\n        else\n            return errorno.badf;*/\n    }\n    else {\n        nWritten = event.bytesWritten();\n    }\n    writeUint32(this.instance, pnum, nWritten);\n    return 0;\n}\nconst textDecoders = new Map();\nfunction getTextDecoder(label) {\n    let ret = textDecoders.get(label);\n    if (!ret) {\n        ret = new TextDecoder(label);\n        textDecoders.set(label, ret);\n    }\n    return ret;\n}\n","import \"../custom_event.js\";\nimport { errorno } from \"../errorno.js\";\nexport class FileDescriptorSeekEvent extends CustomEvent {\n    constructor(fileDescriptor) {\n        super(\"FileDescriptorSeekEvent\", { cancelable: true, detail: { fileDescriptor } });\n    }\n}\n/** POSIX lseek */\nexport function fd_seek(fd, offset, whence, offsetOut) {\n    switch (fd) {\n        case 0:\n            break;\n        case 1:\n            break;\n        case 2:\n            break;\n        default:\n            if (this.dispatchEvent(new FileDescriptorSeekEvent(fd)))\n                return errorno.badf;\n    }\n    return 0;\n}\n","import { getMemory, writeUint32 } from \"../../util.js\";\nimport \"../custom_event.js\";\nimport { errorno } from \"../errorno.js\";\nimport { parseArray } from \"../iovec.js\";\nexport class FileDescriptorWriteEvent extends CustomEvent {\n    constructor(fileDescriptor, data) {\n        super(\"FileDescriptorWriteEvent\", { bubbles: false, cancelable: true, detail: { data, fileDescriptor } });\n    }\n    asString(label) {\n        return this.detail.data.map((d, index) => {\n            let decoded = getTextDecoder(label).decode(d);\n            if (decoded == \"\\0\" && index == this.detail.data.length - 1)\n                return \"\";\n            return decoded;\n        }).join(\"\");\n    }\n}\nexport class UnhandledFileWriteEvent extends Error {\n    constructor(fd) {\n        super(`Unhandled write to file descriptor #${fd}.`);\n    }\n}\n/** POSIX writev */\nexport function fd_write(fd, iov, iovcnt, pnum) {\n    let nWritten = 0;\n    const gen = parseArray(this, iov, iovcnt);\n    // Get all the data to write in its separate buffers\n    const asTypedArrays = [...gen].map(({ bufferStart, bufferLength }) => { nWritten += bufferLength; return new Uint8Array(getMemory(this.instance).buffer, bufferStart, bufferLength); });\n    const event = new FileDescriptorWriteEvent(fd, asTypedArrays);\n    if (this.dispatchEvent(event)) {\n        const str = event.asString(\"utf-8\");\n        if (fd == 1)\n            console.log(str);\n        else if (fd == 2)\n            console.error(str);\n        else\n            return errorno.badf;\n    }\n    writeUint32(this.instance, pnum, nWritten);\n    return 0;\n}\nconst textDecoders = new Map();\nfunction getTextDecoder(label) {\n    let ret = textDecoders.get(label);\n    if (!ret) {\n        ret = new TextDecoder(label);\n        textDecoders.set(label, ret);\n    }\n    return ret;\n}\n","import \"../custom_event.js\";\nexport class AbortEvent extends CustomEvent {\n    code;\n    constructor(code) {\n        super(\"AbortEvent\", { bubbles: false, cancelable: false, detail: { code } });\n        this.code = code;\n    }\n}\nexport class AbortError extends Error {\n    constructor(code) {\n        super(`abort(${code}) was called`);\n    }\n}\nexport function proc_exit(code) {\n    this.dispatchEvent(new AbortEvent(code));\n    throw new AbortError(code);\n}\n","import { instantiateWasi } from \"./instantiate-wasi.js\";\nasync function instantiateGeneric(instantiateWasm, unboundImports) {\n    // There's a bit of song and dance to get around the fact that:\n    // 1. WASM needs its WASI imports immediately upon instantiation.\n    // 2. WASI needs its WASM Instance immediately upon instantiation.\n    // So we use promises to notify each that the other's been created.\n    const { promise: wasmReady, resolve: resolveWasm } = Promise.withResolvers();\n    const { imports, wasiReady } = instantiateWasi(wasmReady, unboundImports);\n    resolveWasm(await instantiateWasm({ ...imports }));\n    return await wasiReady;\n}\n/**\n * Like `WebAssembly.instantiateStreaming`, but also instantiates WASI with the `imports` you pass in.\n *\n * This exists just to remove simple boilerplate. You can easily re-implement if you need to fine-tune the behavior in some way.\n */\nexport async function instantiateStreamingWithWasi(response, unboundImports) {\n    return await instantiateGeneric(async (combinedImports) => await WebAssembly.instantiateStreaming(response, { ...combinedImports }), unboundImports);\n}\n/**\n * Like `WebAssembly.instantiate`, but also instantiates WASI with the `imports` you pass in.\n *\n * This exists just to remove simple boilerplate. You can easily re-implement if you need to fine-tune the behavior in some way.\n */\nexport async function instantiateWithWasi(module, unboundImports) {\n    return await instantiateGeneric(async (combinedImports) => ({ module, instance: await WebAssembly.instantiate(module, { ...combinedImports }) }), unboundImports);\n}\n/**\n * Like `instantiateWithWasi`, but takes the function returned by @rollup/plugin-wasm when a .wasm file is `import`ed by Javascript.\n *\n * This exists just to remove simple boilerplate. You can easily re-implement if you need to fine-tune the behavior in some way.\n */\nexport async function instantiateFromRollupWithWasi(wasmFetchPromise, unboundImports) {\n    return await instantiateGeneric(async (combinedImports) => await wasmFetchPromise(combinedImports), unboundImports);\n}\n","import { getInstanceExports } from \"./util.js\";\nexport class InvalidArrayLengthError extends Error {\n    constructor(sourceByteCount, targetItemSize) {\n        super(`The array could not be assigned because the source array is ${sourceByteCount} byte${sourceByteCount == 1 ? \"\" : \"s\"} long, which is not divisible by ${targetItemSize}, the number of bytes per element in the target array.`);\n    }\n}\n/**\n * Represents a `TypedArray` (e.g. `Int8Array`, etc.) that exists in WASM memory instead of JS memory.\n *\n * As this class is Disposable, it should be created with `using` so your program doesn't OOM.\n */\nclass NativeTypedArray {\n    TypedArray;\n    _instance;\n    _bytesPerWord;\n    // This is assigned in a function that's definitely called from the constructor\n    _impl;\n    _currentCount;\n    _ptr = null;\n    _malloc;\n    _realloc;\n    _free;\n    _updateTypedArrayImpl(newAddress, newCount) {\n        this._impl = new this.TypedArray(this._instance.exports.memory.buffer, newAddress, newCount);\n    }\n    /**\n     * Like `TypedArray.set`, this does not resize the array based on the input. If you're assigning to this array from a source, be sure to call `resize` first.\n     * @param other The source array to copy from\n     * @param offset Where to start writing to in this array\n     */\n    set(other, offset = 0) {\n        this._impl.set(other, offset);\n    }\n    /**\n     * This is simply `resize`, then `set`, with accommodation made for `TypedArray`s of different sizes\n     *\n     * @param other The source array that this array will copy into WASM memory. It can be any kind of `TypedArray`.\n     */\n    assign(other) {\n        const ourNewCount = other.byteLength / this._impl.BYTES_PER_ELEMENT;\n        if (Math.floor(ourNewCount) != ourNewCount) {\n            throw new InvalidArrayLengthError(other.byteLength, this._impl.BYTES_PER_ELEMENT);\n        }\n        this.resize(ourNewCount);\n        this.set(new this.TypedArray(other));\n    }\n    /**\n     * Identically to `TypedArray.at`, a negative `index` will count backwards from the end of the array.\n     */\n    at(index) { return this._impl.at(index); }\n    /**\n     * Resizes this array in WASM memory, allocating as necessary.\n     *\n     * It's recommended to just use `assign`, which copies an entire source array in one step, because\n     * as usual, reading the newly assigned memory before writing to it is undefined behavior and **will** immediately send you to crime jail.\n     *\n     * @param newCount The number of items in this array (not the total size in bytes)\n     */\n    resize(newCount) {\n        if (newCount != this._currentCount) {\n            const newByteCount = newCount * this._bytesPerWord;\n            if (this._ptr)\n                this._ptr = this._realloc(this._ptr, newByteCount);\n            else\n                this._ptr = this._malloc(newByteCount);\n            this._updateTypedArrayImpl(this._ptr, newCount);\n        }\n    }\n    /**\n     * Returns the address of this array (for use with other WASM functions that expect a pointer that points to an array)\n     */\n    get address() { return this._ptr; }\n    constructor(TypedArray, _instance, _bytesPerWord, initialCount) {\n        this.TypedArray = TypedArray;\n        this._instance = _instance;\n        this._bytesPerWord = _bytesPerWord;\n        this._malloc = getInstanceExports(_instance).malloc;\n        this._realloc = getInstanceExports(_instance).realloc;\n        this._free = getInstanceExports(_instance).free;\n        this._currentCount = initialCount || 0;\n        if (initialCount) {\n            this._ptr = this._malloc(initialCount * this._bytesPerWord);\n            this._updateTypedArrayImpl(this._ptr, initialCount);\n        }\n        else\n            this._ptr = null;\n        this._updateTypedArrayImpl(this._ptr || 0, initialCount || 0);\n    }\n    [Symbol.dispose]() {\n        if (this._ptr) {\n            this._free(this._ptr);\n        }\n    }\n}\nexport class NativeInt8Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Int8Array, instance, 1, initialCount); }\n}\nexport class NativeUint8Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint8Array, instance, 1, initialCount); }\n}\nexport class NativeUint8ClampedArray extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint8ClampedArray, instance, 1, initialCount); }\n}\nexport class NativeInt16Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Int16Array, instance, 2, initialCount); }\n}\nexport class NativeUint16Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint16Array, instance, 2, initialCount); }\n}\nexport class NativeInt32Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Int32Array, instance, 4, initialCount); }\n}\nexport class NativeUint32Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint32Array, instance, 4, initialCount); }\n}\nexport class NativeBigInt64Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(BigInt64Array, instance, 8, initialCount); }\n}\nexport class NativeBigUint64Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(BigUint64Array, instance, 8, initialCount); }\n}\n","// This file does not import anything.\r\n// It holds space for a WebAssembly instance.\r\n// It only exists on the Worker thread.\r\n// `provideSource`, conversely, is made available to either thread (whichever one holds the binary source)\r\n//\r\n// The intention for this file is to make it easy to switch whether the **source** lives in the Worker or on Main (not the instantiation, just the source).\r\n\r\nimport { __throw_exception_with_stack_trace, emscripten_notify_memory_growth, environ_get, environ_sizes_get, fd_close, fd_read, fd_seek, fd_write, instantiateStreamingWithWasi, instantiateWithWasi, proc_exit } from \"basic-event-wasi\";\r\n\r\n\r\nconst imports2 = {\r\n    env: { __throw_exception_with_stack_trace, emscripten_notify_memory_growth },\r\n    wasi_snapshot_preview1: { fd_write, proc_exit, fd_close, fd_read, fd_seek, environ_get, environ_sizes_get }\r\n};\r\n\r\ntype SourceTypes = string | ArrayBuffer | Response | WebAssembly.Module;\r\n\r\nconst { promise: sourceAsync, resolve: resolveSource, reject: rejectSource } = Promise.withResolvers<SourceTypes>();\r\nconst { promise: wasmAsync, resolve: resolveWasm, reject: rejectWasm } = Promise.withResolvers<WebAssembly.WebAssemblyInstantiatedSource>();\r\n\r\nlet wasmSync: WebAssembly.WebAssemblyInstantiatedSource | null = null;\r\n\r\nfunction getWasmSync(): WebAssembly.WebAssemblyInstantiatedSource | Partial<WebAssembly.WebAssemblyInstantiatedSource> { return wasmSync || {}; }\r\nasync function getWasmAsync() { return (await wasmAsync) || {}; }\r\n\r\n/**\r\n * Provide the Worker thread with the WASM binary source so that it can be instantiated.\r\n * \r\n * If this is on the Main thread, it's async (via Comlink). \r\n * If it's on the Worker thread, it's sync (via just calling it. directly.)\r\n * @param source \r\n */\r\nfunction provideSource(source: SourceTypes) {\r\n    try {\r\n        resolveSource(source);\r\n    }\r\n    catch (ex) {\r\n        rejectSource(ex);\r\n    }\r\n}\r\n\r\nexport {\r\n    // To get the instantiated binary (on the Worker thread), call these.\r\n    getWasmAsync,\r\n    getWasmSync,\r\n\r\n    // Whoever has the source to the WASM binary, be it the main thread or Worker thread\r\n    // should pass it here to `provideSource` (via e.g. Comlink). Doing so will instantiate the binary.\r\n    provideSource\r\n};\r\n\r\n\r\n\r\n// Once this module loads, immediately wait for someone to provide us with the binary source,\r\n// then instantiate it.\r\n(async () => {\r\n    try {\r\n        const obj = await sourceAsync;\r\n        if (typeof obj == \"string\") {\r\n            const url = new URL(obj, import.meta.url);\r\n            resolveWasm(wasmSync = await instantiateStreamingWithWasi(fetch(url), imports2))\r\n        }\r\n        else if (obj instanceof Response) {\r\n            resolveWasm(wasmSync = await instantiateStreamingWithWasi(obj, imports2))\r\n        }\r\n        else if (obj instanceof ArrayBuffer || obj instanceof WebAssembly.Module) {\r\n            resolveWasm(wasmSync = await instantiateWithWasi(obj, imports2))\r\n        }\r\n        else {\r\n            throw new Error(`provideSource was called on the main thread with something that wasn't a string (as a URL), Response, ArrayBuffer, or WebAssembly.Module. Only those types can be instantiated.`);\r\n        }\r\n    }\r\n    catch (e) {\r\n        rejectWasm(e);\r\n    }\r\n})()","import { writeUint32 } from \"../../util.js\";\nexport function environ_get(environCountOutput, environSizeOutput) {\n    writeUint32(this.instance, environCountOutput, 0);\n    writeUint32(this.instance, environSizeOutput, 0);\n    return 0;\n}\n","import { getInstanceExports } from \"basic-event-wasi\";\r\nimport { getWasmSync } from \"./instance.js\";\r\n\r\nexport type ReadableBarcodeFormats = \"Aztec\" | \"Codabar\" | \"Code128\" | \"Code39\" | \"Code93\" | \"DataBar\" | \"DataBarExpanded\" | \"DataMatrix\" | \"DXFilmEdge\" | \"EAN13\" | \"EAN8\" | \"ITF\" | \"LinearCodes\" | \"MatrixCodes\" | \"MaxiCode\" | \"MicroQRCode\" | \"None\" | \"PDF417\" | \"QRCode\" | \"RMQRCode\" | \"UPCA\" | \"UPCE\";\r\nexport type WritableBarcodeFormats = \"Aztec\" | \"Codabar\" | \"Code128\" | \"Code39\" | \"Code93\" | \"DataMatrix\" | \"EAN13\" | \"EAN8\" | \"ITF\" | \"PDF417\" | \"QRCode\" | \"UPCA\" | \"UPCE\";\r\nexport function convertFormat(input: WritableBarcodeFormats | ReadableBarcodeFormats): number {\r\n    const e = getInstanceExports(getWasmSync()!.instance!);\r\n    switch (input) {\r\n        case \"Aztec\": return e.formatAztec();\r\n        case \"Codabar\": return e.formatCodabar();\r\n        case \"Code128\": return e.formatCode128();\r\n        case \"Code39\": return e.formatCode39();\r\n        case \"Code93\": return e.formatCode93();\r\n        case \"DataMatrix\": return e.formatDataMatrix();\r\n        case \"EAN13\": return e.formatEAN13();\r\n        case \"EAN8\": return e.formatEAN8();\r\n        case \"ITF\": return e.formatITF();\r\n        case \"PDF417\": return e.formatPDF417();\r\n        case \"QRCode\": return e.formatQRCode();\r\n        case \"UPCA\": return e.formatUPCA();\r\n        case \"UPCE\": return e.formatUPCE();\r\n        case \"DataBar\": return e.formatDataBar();\r\n        case \"DataBarExpanded\": return e.formatDataBarExpanded();\r\n        case \"DXFilmEdge\": return e.formatDXFilmEdge();\r\n        case \"LinearCodes\": return e.formatLinearCodes();\r\n        case \"MatrixCodes\": return e.formatMatrixCodes();\r\n        case \"MaxiCode\": return e.formatMaxiCode();\r\n        case \"MicroQRCode\": return e.formatMicroQRCode();\r\n        case \"None\": return e.formatNone();\r\n        case \"RMQRCode\": return e.formatRMQRCode();\r\n    }\r\n}","import {\r\n    NativeUint8ClampedArray,\r\n    getInstanceExports\r\n} from \"basic-event-wasi\";\r\nimport { transfer } from \"comlink\";\r\nimport { WritableBarcodeFormats, convertFormat } from \"./barcode-formats.js\";\r\nimport { getWasmSync } from \"./instance.js\";\r\n\r\nlet arrayInWasmForEncodeSourceData: NativeUint8ClampedArray | undefined = undefined;\r\nfunction getEncodeSourceBuffer() {\r\n    const { instance } = getWasmSync()!;\r\n    if (instance && arrayInWasmForEncodeSourceData == undefined) {\r\n        return arrayInWasmForEncodeSourceData = new NativeUint8ClampedArray(instance, null);\r\n    }\r\n    return arrayInWasmForEncodeSourceData;\r\n}\r\n\r\ninterface EncodeResultNormal {\r\n    data: ArrayBuffer;\r\n    width: number;\r\n    height: number;\r\n    error?: undefined;\r\n}\r\n\r\ninterface EncodeResultError {\r\n    data: null;\r\n    width?: undefined;\r\n    height?: undefined;\r\n    error: 'wasm-not-instantiated' | 'empty-input'\r\n}\r\n\r\ntype EncodeResult = EncodeResultNormal | EncodeResultError;\r\n\r\nexport function encode(data: Uint8ClampedArray, encoding: \"binary\" | \"utf8\", format: WritableBarcodeFormats, ecc: number): EncodeResult {\r\n    const { instance } = getWasmSync()!;\r\n    const encodeBuffer = getEncodeSourceBuffer()\r\n\r\n    if (instance == null || encodeBuffer == null)\r\n        return { data: null, error: 'wasm-not-instantiated' };\r\n\r\n    if (data.length == 0 || data == null)   // ZXing explicitly throws on a zero-length array, so check for that.\r\n        return { data: null, error: 'empty-input' };\r\n\r\n    encodeBuffer.assign(data);\r\n\r\n    const csBinary = getInstanceExports(instance).characterSetBINARY();\r\n    const csUtf8 = getInstanceExports(instance).characterSetUTF8();\r\n    getInstanceExports(instance).generate(encodeBuffer.address!, data.byteLength, encoding == \"binary\" ? csBinary : csUtf8, convertFormat(format), ecc);\r\n\r\n    // Copy the image from WASM memory to JS memory\r\n    const generatedImagePtr = getInstanceExports(instance).getGeneratedImageData();\r\n    const generatedImageLength = getInstanceExports(instance).getGeneratedImageLength();\r\n    const generatedImageWidth = getInstanceExports(instance).getGeneratedImageWidth();\r\n    const generatedImageHeight = getInstanceExports(instance).getGeneratedImageHeight();\r\n    const input = new Uint8ClampedArray(getInstanceExports(instance).memory.buffer, generatedImagePtr, generatedImageLength);\r\n    const output = new Uint8ClampedArray(new ArrayBuffer(generatedImageLength));\r\n    output.set(input);\r\n\r\n    //const img = new ImageData(output, generatedImageWidth, generatedImageHeight);\r\n    return transfer({\r\n        data: output.buffer,\r\n        width: generatedImageWidth,\r\n        height: generatedImageHeight,\r\n    }, [output.buffer])\r\n}","import {\r\n    NativeUint8ClampedArray,\r\n    getInstanceExports,\r\n    getMemory\r\n} from \"basic-event-wasi\";\r\nimport { ReadableBarcodeFormats, convertFormat } from \"./barcode-formats.js\";\r\nimport { getWasmSync } from \"./instance.js\";\r\nimport { ScanResult, ScanResultCoordinate } from \"./shared.js\";\r\n\r\nlet arrayInWasmForCameraImageData: NativeUint8ClampedArray | undefined = undefined;\r\n\r\nfunction getCameraBuffer() {\r\n    const { instance } = getWasmSync()!;\r\n    if (instance && arrayInWasmForCameraImageData == undefined) {\r\n        return arrayInWasmForCameraImageData = new NativeUint8ClampedArray(instance, null);\r\n    }\r\n    return arrayInWasmForCameraImageData;\r\n}\r\n\r\n\r\nfunction* scan(rgbaImageData: Uint8ClampedArray, width: number, height: number, format: ReadableBarcodeFormats = \"QRCode\") {\r\n    const { instance } = getWasmSync()!;\r\n    const arrayInWasmForCameraImageData = getCameraBuffer();\r\n\r\n    if (instance == null || arrayInWasmForCameraImageData == null)\r\n        return null;\r\n\r\n    arrayInWasmForCameraImageData.resize(rgbaImageData.length);\r\n    arrayInWasmForCameraImageData.set(rgbaImageData);\r\n    let resultCount = getInstanceExports(instance).scan(arrayInWasmForCameraImageData.address!, width, height, convertFormat(format), true);\r\n\r\n    for (let i = 0; i < resultCount; ++i) {\r\n        const stringLength = getInstanceExports(instance).currentResultTextLength();\r\n        const pointerToCStr = getInstanceExports(instance).readCurrentResultText();\r\n        const dataLength = getInstanceExports(instance).currentResultDataLength();\r\n        const pointerToData = getInstanceExports(instance).readCurrentResultData();\r\n        const orientation = getInstanceExports(instance).currentResultOrientation();\r\n        const hash = getInstanceExports(instance).currentResultHash();\r\n        const positions = ([0, 1, 2, 3] as const).map(i => ({\r\n            x: getInstanceExports(instance!).positionOfCurrentResultX(i),\r\n            y: getInstanceExports(instance!).positionOfCurrentResultY(i),\r\n        })) as [ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate];\r\n\r\n        const text = (new TextDecoder(\"utf-8\")).decode(new Uint8Array(getMemory(instance).buffer, pointerToCStr, stringLength));\r\n        const dataBuffer = new ArrayBuffer(dataLength);\r\n        const data = new Uint8Array(dataBuffer);\r\n        data.set(new Uint8Array(getInstanceExports(instance).memory.buffer, pointerToData, dataLength));\r\n\r\n        getInstanceExports(instance).nextResult();\r\n\r\n        let ret: ScanResult = {\r\n            text,\r\n            data,\r\n            positions,\r\n            orientation,\r\n            hash\r\n        }\r\n\r\n        yield ret;\r\n    }\r\n}\r\n\r\nexport function scanAll(rgbaImageData: Uint8ClampedArray, width: number, height: number, format: ReadableBarcodeFormats = \"QRCode\"): ScanResult[] {\r\n    return [...scan(rgbaImageData, width, height, format)]\r\n}","import { getWasmAsync } from \"./instance.js\";\r\nexport { provideSource } from \"./instance.js\";\r\n\r\nexport interface ScanResultCoordinate {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface ScanResult {\r\n    text: string;\r\n    hash: number;\r\n    data: Uint8Array;\r\n    /**\r\n     * Order is clockwise from top-left:\r\n     * * top-left\r\n     * * top-right\r\n     * * bottom-right\r\n     * * bottom-left\r\n     */\r\n    positions: [ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate];\r\n\r\n    /** Measured in degrees, may be negative */\r\n    orientation: number;\r\n}\r\n\r\n\r\n\r\nexport async function waitUntilReady() {\r\n    await getWasmAsync();\r\n    return;\r\n}\r\n\r\n\r\n\r\n","//import \"core-js\";\r\n\r\nimport { expose } from \"comlink\";\r\nimport * as Encoder from \"./encoder.js\";\r\nimport * as Scanner from \"./scanner.js\";\r\nimport * as Shared from \"./shared.js\";\r\n\r\nexpose({ ...Scanner, ...Encoder, ...Shared });\r\n\r\nexport * from \"./encoder.js\";\r\nexport * from \"./scanner.js\";\r\nexport * from \"./shared.js\";\r\n\r\n"],"names":["parseArray","_slicedToArray","r","e","Array","isArray","_arrayWithHoles","l","t","Symbol","iterator","n","i","u","a","f","o","call","next","Object","done","push","value","length","return","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","_callSuper","_getPrototypeOf","_typeof","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","_inherits","prototype","create","writable","configurable","defineProperty","_setPrototypeOf","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","arguments","p","bind","_construct","this","enumerable","Boolean","valueOf","setPrototypeOf","__proto__","getPrototypeOf","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_defineProperty","toPrimitive","String","Number","_toPrimitive","_globalThis$Event","globalThis","Event","_Event","type_","eventInitDict","bubbles","cancelBubble","cancelable","composed","currentTarget","defaultPrevented","eventPhase","NONE","isTrusted","returnValue","srcElement","target","timeStamp","type","_globalThis$CustomEve","CustomEvent","_this","detail","_type","_bubbles","_cancelable","MemoryGrowthEvent","impl","index","WebAssemblyExceptionEvent","exception","wasi","instantiateWasi","wasmInstance","unboundImports","_dispatchEvent","resolve","dispatchEvent","undefined","console","warn","event","concat","instance","module","cachedMemoryView","then","obj","DataView","exports","memory","buffer","assert","_initialize","_start","imports","wasi_snapshot_preview1","bindAllFuncs","env","wasiReady","Promise","res","fromEntries","entries","map","_ref2","_ref3","func","getMemory","getImpl","readUint32","ptr","getUint32","writeUint32","setUint32","readPointer","getInstanceExports","FileDescriptorCloseEvent","fileDescriptor","parse","info","bufferStart","bufferLength","count","sizeofStruct","_regeneratorRuntime","wrap","_context","prev","getPointerSize","stop","_marked","errorno","FileDescriptorReadEvent","requestedBufferInfo","_this2","requestedBuffers","readIntoMemory","inputBuffers","j","Math","min","byteLength","setUint8","_bytesWritten","FileDescriptorSeekEvent","FileDescriptorWriteEvent","data","label","_this3","d","decoded","ret","textDecoders","TextDecoder","getTextDecoder","decode","join","AbortEvent","code","_this5","AbortError","Error","instantiateGeneric","_x","_x2","_instantiateGeneric","_asyncToGenerator","mark","_callee3","instantiateWasm","_Promise$withResolver3","wasmReady","resolveWasm","_instantiateWasi","_context4","withResolvers","promise","t0","_objectSpread","t1","sent","abrupt","instantiateStreamingWithWasi","_x3","_x4","_instantiateStreamingWithWasi","_callee5","response","_context6","_ref6","_callee4","combinedImports","_context5","WebAssembly","instantiateStreaming","_x7","instantiateWithWasi","_x5","_x6","_instantiateWithWasi","_callee7","_context8","_ref7","_callee6","_context7","instantiate","_x8","InvalidArrayLengthError","sourceByteCount","targetItemSize","NativeTypedArray","TypedArray","_instance","_bytesPerWord","initialCount","_malloc","malloc","_realloc","realloc","_free","free","_currentCount","_ptr","_updateTypedArrayImpl","newAddress","newCount","_impl","other","offset","ourNewCount","BYTES_PER_ELEMENT","floor","resize","at","newByteCount","dispose","NativeUint8ClampedArray","Uint8ClampedArray","imports2","__throw_exception_with_stack_trace","ex","emscripten_notify_memory_growth","fd_write","fd","iov","iovcnt","pnum","_this4","nWritten","asTypedArrays","_toConsumableArray","_ref4","Uint8Array","str","asString","log","badf","error","proc_exit","fd_close","fd_read","gen","bytesWritten","fd_seek","whence","offsetOut","environ_get","environCountOutput","environSizeOutput","environ_sizes_get","_Promise$withResolver","sourceAsync","resolveSource","rejectSource","reject","_Promise$withResolver2","wasmAsync","rejectWasm","wasmSync","getWasmSync","getWasmAsync","_getWasmAsync","_callee8","_context9","provideSource","source","convertFormat","input","formatAztec","formatCodabar","formatCode128","formatCode39","formatCode93","formatDataMatrix","formatEAN13","formatEAN8","formatITF","formatPDF417","formatQRCode","formatUPCA","formatUPCE","formatDataBar","formatDataBarExpanded","formatDXFilmEdge","formatLinearCodes","formatMatrixCodes","formatMaxiCode","formatMicroQRCode","formatNone","formatRMQRCode","_callee","url","_context2","URL","fetch","Response","t2","t3","ArrayBuffer","Module","t4","t5","t6","arrayInWasmForEncodeSourceData","encode","encoding","format","ecc","encodeBuffer","getEncodeSourceBuffer","assign","csBinary","characterSetBINARY","csUtf8","characterSetUTF8","generate","address","generatedImagePtr","getGeneratedImageData","generatedImageLength","getGeneratedImageLength","generatedImageWidth","getGeneratedImageWidth","generatedImageHeight","getGeneratedImageHeight","output","transfer","width","height","arrayInWasmForCameraImageData","getCameraBuffer","scanAll","rgbaImageData","_callee2","_getWasmSync4","resultCount","stringLength","pointerToCStr","dataLength","pointerToData","orientation","hash","positions","text","dataBuffer","_context3","scan","currentResultTextLength","readCurrentResultText","currentResultDataLength","readCurrentResultData","currentResultOrientation","currentResultHash","x","positionOfCurrentResultX","y","positionOfCurrentResultY","nextResult","waitUntilReady","_waitUntilReady","_callee9","_context10","expose","Scanner","Encoder","Shared"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17]}