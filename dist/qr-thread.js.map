{"version":3,"file":"qr-thread.js","sources":["../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/iovec.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/event.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/custom_event.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/env/emscripten_notify_memory_growth.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/env/throw_exception_with_stack_trace.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/instantiate-wasi.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/util.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/environ_sizes_get.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_close.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/errorno.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_read.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_seek.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/fd_write.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/proc_exit.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/instantiate-wasm.js","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/native-array.js","../src/thread-worker/thread-worker/instance.ts","../node_modules/.pnpm/github.com+mwszekely+basic-event-wasi@82c4e04d90179d73bdcd3533a36d3058568dd1b8_typescript@5.4.0-dev.20240207/node_modules/basic-event-wasi/dist/impl/wasi_snapshot_preview1/environ_get.js","../src/thread-worker/thread-worker/barcode-formats.ts","../src/thread-worker/thread-worker/encoder.ts","../src/thread-worker/thread-worker/scanner.ts","../src/thread-worker/thread-worker/shared.ts","../src/thread-worker/thread-worker/index.ts"],"sourcesContent":["import { getPointerSize, readPointer, readUint32 } from \"../util.js\";\nexport function parse(info, ptr) {\n    return {\n        bufferStart: readPointer(info.instance, ptr),\n        bufferLength: readUint32(info.instance, ptr + getPointerSize(info.instance))\n    };\n}\nexport function* parseArray(info, ptr, count) {\n    const sizeofStruct = getPointerSize(info.instance) + 4;\n    for (let i = 0; i < count; ++i) {\n        yield parse(info, ptr + (i * sizeofStruct));\n    }\n}\n","// Needed for extremely limited environments, like Worklets.\n// This seems to exist in Chrome but not, e.g., Firefox, possibly Safari\nglobalThis.Event ??= class Event {\n    constructor(type_, eventInitDict) {\n        this.bubbles = eventInitDict?.bubbles || false;\n        this.cancelBubble = false;\n        this.cancelable = eventInitDict?.cancelable || false;\n        this.composed = eventInitDict?.composed || false;\n        this.currentTarget = null;\n        this.defaultPrevented = false;\n        this.eventPhase = Event.NONE;\n        this.isTrusted = true;\n        this.returnValue = false;\n        this.srcElement = null;\n        this.target = null;\n        this.timeStamp = 0;\n        this.type = type_;\n    }\n    static NONE = 0;\n    static CAPTURING_PHASE = 1;\n    static AT_TARGET = 2;\n    static BUBBLING_PHASE = 3;\n    bubbles;\n    cancelBubble;\n    cancelable;\n    composed;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    srcElement;\n    target;\n    timeStamp;\n    type;\n    composedPath() { return []; }\n    initEvent(type_, bubbles, cancelable) { this.type = type_; this.bubbles = bubbles || this.bubbles; this.cancelable = cancelable || this.cancelable; }\n    preventDefault() { this.defaultPrevented = true; }\n    stopImmediatePropagation() { }\n    stopPropagation() { }\n};\nexport {};\n","import \"./event.js\";\n// Worklets don't define `CustomEvent`, even when they do define `Event` itself...\nglobalThis.CustomEvent ??= class CustomEvent extends Event {\n    constructor(type, eventInitDict) {\n        super(type, eventInitDict);\n        this.detail = eventInitDict?.detail;\n    }\n    detail;\n    initCustomEvent(_type, _bubbles, _cancelable, detail) {\n        // this.type, this.bubbles, and this.cancelable are all readonly...\n        this.detail = (detail ?? this.detail);\n    }\n};\n","import \"../custom_event.js\";\nexport class MemoryGrowthEvent extends CustomEvent {\n    constructor(impl, index) {\n        super(\"MemoryGrowthEvent\", { cancelable: false, detail: { index } });\n    }\n}\nexport function emscripten_notify_memory_growth(index) {\n    this.dispatchEvent(new MemoryGrowthEvent(this, index));\n}\n","import \"../custom_event.js\";\nexport class WebAssemblyExceptionEvent extends CustomEvent {\n    constructor(impl, exception) {\n        super(\"WebAssemblyExceptionEvent\", { cancelable: false, detail: { exception } });\n    }\n}\nexport function __throw_exception_with_stack_trace(ex) {\n    this.dispatchEvent(new WebAssemblyExceptionEvent(this, ex));\n}\n","const wasi = Symbol(\"wasi-impl\");\n/**\n * Instantiate the WASI interface, binding all its functions to the WASM instance itself.\n *\n * Must be used in conjunction with, e.g., `WebAssembly.instantiate`. Because that and this both require each other circularly,\n * `instantiateStreamingWithWasi` and `instantiateWithWasi` are convenience functions that do both at once.\n *\n * The WASI interface functions can't be used alone -- they need context like (what memory is this a pointer in) and such.\n *\n * This function provides that context to an import before it's passed to an `Instance` for construction.\n *\n * @remarks Intended usage:\n *\n * ```typescript\n * import { fd_write, proc_exit } from \"basic-event-wasi\"\n * // Waiting for https://github.com/tc39/proposal-promise-with-resolvers...\n * let resolve: (info: WebAssemblyInstantiatedSource) => void;\n * let reject: (error: any) => void;\n * let promise = new Promise<WebAssemblyInstantiatedSource>((res, rej) => {\n *     resolve = res;\n *     reject = rej;\n * });\n *\n * WebAssembly.instantiateStreaming(source, { ...makeWasiInterface(promise.then(s => s.instance), { fd_write, proc_exit }) });\n * ```\n * ([Please please please please please](https://github.com/tc39/proposal-promise-with-resolvers))\n *\n * @param wasmInstance\n * @param unboundImports\n * @returns\n */\nexport function instantiateWasi(wasmInstance, unboundImports, { dispatchEvent } = {}) {\n    if (!dispatchEvent && !(\"dispatchEvent\" in globalThis)) {\n        console.warn(`globalThis.dispatchEvent does not exist here -- events from WebAssembly will go unhandled.`);\n    }\n    dispatchEvent ??= function dispatchEvent(event) {\n        if (\"dispatchEvent\" in globalThis) {\n            return globalThis.dispatchEvent(event);\n        }\n        else {\n            console.warn(`Unhandled event: ${event}`);\n            return false;\n        }\n    };\n    let resolve;\n    const p = {\n        instance: null,\n        module: null,\n        //wasiSubset: unboundImports,\n        cachedMemoryView: null,\n        dispatchEvent(e) { return dispatchEvent(e); }\n    };\n    wasmInstance.then((obj) => {\n        const { instance, module } = obj;\n        p.instance = instance;\n        p.module = module;\n        instance[wasi] = p;\n        p.cachedMemoryView = new DataView(instance.exports.memory.buffer);\n        console.assert((\"_initialize\" in p.instance.exports) != \"_start\" in p.instance.exports);\n        if (\"_initialize\" in p.instance.exports) {\n            p.instance.exports._initialize();\n        }\n        else if (\"_start\" in p.instance.exports) {\n            p.instance.exports._start();\n        }\n        resolve(obj);\n    });\n    // All the functions we've been passed were imported and haven't been bound yet.\n    // Return a new object with each member bound to the private information we pass around.\n    const wasi_snapshot_preview1 = bindAllFuncs(p, unboundImports.wasi_snapshot_preview1);\n    const env = bindAllFuncs(p, unboundImports.env);\n    const boundImports = { wasi_snapshot_preview1, env };\n    return {\n        imports: boundImports,\n        // Until this resolves, no WASI functions can be called (and by extension no w'asm exports can be called)\n        // It resolves immediately after the input promise to the instance&module resolves\n        wasiReady: new Promise((res) => { resolve = res; })\n    };\n}\nexport function getImpl(instance) {\n    return instance[wasi];\n}\n// Given an object, binds each function in that object to p (shallowly).\nfunction bindAllFuncs(p, r) {\n    return Object.fromEntries(Object.entries(r).map(([key, func]) => { return [key, (typeof func == \"function\" ? func.bind(p) : func)]; }));\n}\n","import { getImpl } from \"./instantiate-wasi.js\";\nexport function getMemory(instance) {\n    return getImpl(instance).cachedMemoryView;\n}\nexport function copyToWasm(instance, destinationAddress, sourceData) {\n    (new Uint8Array(getMemory(instance).buffer, destinationAddress, sourceData.byteLength)).set(sourceData);\n}\nexport function readUint64(instance, ptr) { return getMemory(instance).getBigUint64(ptr, true); }\nexport function readInt64(instance, ptr) { return getMemory(instance).getBigInt64(ptr, true); }\nexport function readUint32(instance, ptr) { return getMemory(instance).getUint32(ptr, true); }\nexport function readInt32(instance, ptr) { return getMemory(instance).getInt32(ptr, true); }\nexport function readUint16(instance, ptr) { return getMemory(instance).getUint16(ptr, true); }\nexport function readInt16(instance, ptr) { return getMemory(instance).getInt16(ptr, true); }\nexport function readUint8(instance, ptr) { return getMemory(instance).getUint8(ptr); }\nexport function readInt8(instance, ptr) { return getMemory(instance).getInt8(ptr); }\nexport function writeUint64(instance, ptr, value) { return getMemory(instance).setBigUint64(ptr, value, true); }\nexport function writeInt64(instance, ptr, value) { return getMemory(instance).setBigInt64(ptr, value, true); }\nexport function writeUint32(instance, ptr, value) { return getMemory(instance).setUint32(ptr, value, true); }\nexport function writeInt32(instance, ptr, value) { return getMemory(instance).setInt32(ptr, value, true); }\nexport function writeUint16(instance, ptr, value) { return getMemory(instance).setUint16(ptr, value, true); }\nexport function writeInt16(instance, ptr, value) { return getMemory(instance).setInt16(ptr, value, true); }\nexport function writeUint8(instance, ptr, value) { return getMemory(instance).setUint8(ptr, value); }\nexport function writeInt8(instance, ptr, value) { return getMemory(instance).setInt8(ptr, value); }\nexport function readPointer(instance, ptr) { return getMemory(instance).getUint32(ptr, true); }\nexport function getPointerSize(_instance) { return 4; }\nexport function getInstanceExports(instance) {\n    return instance.exports;\n}\n","import { writeUint32 } from \"../../util.js\";\nexport function environ_sizes_get(environCountOutput, environSizeOutput) {\n    writeUint32(this.instance, environCountOutput, 0);\n    writeUint32(this.instance, environSizeOutput, 0);\n    return 0;\n}\n","import \"../custom_event.js\";\nexport class FileDescriptorCloseEvent extends CustomEvent {\n    constructor(fileDescriptor) {\n        super(\"FileDescriptorCloseEvent\", { cancelable: true, detail: { fileDescriptor } });\n    }\n}\n/** POSIX close */\nexport function fd_close(fd) {\n    const event = new FileDescriptorCloseEvent(fd);\n    if (this.dispatchEvent(event)) {\n    }\n}\n","export var errorno;\n(function (errorno) {\n    errorno[errorno[\"success\"] = 0] = \"success\";\n    errorno[errorno[\"toobig\"] = 1] = \"toobig\";\n    errorno[errorno[\"acces\"] = 2] = \"acces\";\n    errorno[errorno[\"addrinuse\"] = 3] = \"addrinuse\";\n    errorno[errorno[\"addrnotavail\"] = 4] = \"addrnotavail\";\n    errorno[errorno[\"afnosupport\"] = 5] = \"afnosupport\";\n    errorno[errorno[\"again\"] = 6] = \"again\";\n    errorno[errorno[\"already\"] = 7] = \"already\";\n    errorno[errorno[\"badf\"] = 8] = \"badf\";\n    errorno[errorno[\"badmsg\"] = 9] = \"badmsg\";\n    errorno[errorno[\"busy\"] = 10] = \"busy\";\n    errorno[errorno[\"canceled\"] = 11] = \"canceled\";\n    errorno[errorno[\"child\"] = 12] = \"child\";\n    errorno[errorno[\"connaborted\"] = 13] = \"connaborted\";\n    errorno[errorno[\"connrefused\"] = 14] = \"connrefused\";\n    errorno[errorno[\"connreset\"] = 15] = \"connreset\";\n    errorno[errorno[\"deadlk\"] = 16] = \"deadlk\";\n    errorno[errorno[\"destaddrreq\"] = 17] = \"destaddrreq\";\n    errorno[errorno[\"dom\"] = 18] = \"dom\";\n    errorno[errorno[\"dquot\"] = 19] = \"dquot\";\n    errorno[errorno[\"exist\"] = 20] = \"exist\";\n    errorno[errorno[\"fault\"] = 21] = \"fault\";\n    errorno[errorno[\"fbig\"] = 22] = \"fbig\";\n    errorno[errorno[\"hostunreach\"] = 23] = \"hostunreach\";\n    errorno[errorno[\"idrm\"] = 24] = \"idrm\";\n    errorno[errorno[\"ilseq\"] = 25] = \"ilseq\";\n    errorno[errorno[\"inprogress\"] = 26] = \"inprogress\";\n    errorno[errorno[\"intr\"] = 27] = \"intr\";\n    errorno[errorno[\"inval\"] = 28] = \"inval\";\n    errorno[errorno[\"io\"] = 29] = \"io\";\n    errorno[errorno[\"isconn\"] = 30] = \"isconn\";\n    errorno[errorno[\"isdir\"] = 31] = \"isdir\";\n    errorno[errorno[\"loop\"] = 32] = \"loop\";\n    errorno[errorno[\"mfile\"] = 33] = \"mfile\";\n    errorno[errorno[\"mlink\"] = 34] = \"mlink\";\n    errorno[errorno[\"msgsize\"] = 35] = \"msgsize\";\n    errorno[errorno[\"multihop\"] = 36] = \"multihop\";\n    errorno[errorno[\"nametoolong\"] = 37] = \"nametoolong\";\n    errorno[errorno[\"netdown\"] = 38] = \"netdown\";\n    errorno[errorno[\"netreset\"] = 39] = \"netreset\";\n    errorno[errorno[\"netunreach\"] = 40] = \"netunreach\";\n    errorno[errorno[\"nfile\"] = 41] = \"nfile\";\n    errorno[errorno[\"nobufs\"] = 42] = \"nobufs\";\n    errorno[errorno[\"nodev\"] = 43] = \"nodev\";\n    errorno[errorno[\"noent\"] = 44] = \"noent\";\n    errorno[errorno[\"noexec\"] = 45] = \"noexec\";\n    errorno[errorno[\"nolck\"] = 46] = \"nolck\";\n    errorno[errorno[\"nolink\"] = 47] = \"nolink\";\n    errorno[errorno[\"nomem\"] = 48] = \"nomem\";\n    errorno[errorno[\"nomsg\"] = 49] = \"nomsg\";\n    errorno[errorno[\"noprotoopt\"] = 50] = \"noprotoopt\";\n    errorno[errorno[\"nospc\"] = 51] = \"nospc\";\n    errorno[errorno[\"nosys\"] = 52] = \"nosys\";\n    errorno[errorno[\"notconn\"] = 53] = \"notconn\";\n    errorno[errorno[\"notdir\"] = 54] = \"notdir\";\n    errorno[errorno[\"notempty\"] = 55] = \"notempty\";\n    errorno[errorno[\"notrecoverable\"] = 56] = \"notrecoverable\";\n    errorno[errorno[\"notsock\"] = 57] = \"notsock\";\n    errorno[errorno[\"notsup\"] = 58] = \"notsup\";\n    errorno[errorno[\"notty\"] = 59] = \"notty\";\n    errorno[errorno[\"nxio\"] = 60] = \"nxio\";\n    errorno[errorno[\"overflow\"] = 61] = \"overflow\";\n    errorno[errorno[\"ownerdead\"] = 62] = \"ownerdead\";\n    errorno[errorno[\"perm\"] = 63] = \"perm\";\n    errorno[errorno[\"pipe\"] = 64] = \"pipe\";\n    errorno[errorno[\"proto\"] = 65] = \"proto\";\n    errorno[errorno[\"protonosupport\"] = 66] = \"protonosupport\";\n    errorno[errorno[\"prototype\"] = 67] = \"prototype\";\n    errorno[errorno[\"range\"] = 68] = \"range\";\n    errorno[errorno[\"rofs\"] = 69] = \"rofs\";\n    errorno[errorno[\"spipe\"] = 70] = \"spipe\";\n    errorno[errorno[\"srch\"] = 71] = \"srch\";\n    errorno[errorno[\"stale\"] = 72] = \"stale\";\n    errorno[errorno[\"timedout\"] = 73] = \"timedout\";\n    errorno[errorno[\"txtbsy\"] = 74] = \"txtbsy\";\n    errorno[errorno[\"xdev\"] = 75] = \"xdev\";\n    errorno[errorno[\"notcapable\"] = 76] = \"notcapable\";\n})(errorno || (errorno = {}));\n","import { writeUint32, writeUint8 } from \"../../util.js\";\nimport \"../custom_event.js\";\nimport { parseArray } from \"../iovec.js\";\nexport class FileDescriptorReadEvent extends CustomEvent {\n    _bytesWritten = 0;\n    constructor(impl, fileDescriptor, requestedBufferInfo) {\n        super(\"FileDescriptorReadEvent\", {\n            bubbles: false,\n            cancelable: true,\n            detail: {\n                fileDescriptor,\n                requestedBuffers: requestedBufferInfo,\n                readIntoMemory: (inputBuffers) => {\n                    // 100% untested, probably doesn't work if I'm being honest\n                    for (let i = 0; i < requestedBufferInfo.length; ++i) {\n                        if (i >= inputBuffers.length)\n                            break;\n                        const buffer = inputBuffers[i];\n                        for (let j = 0; j < Math.min(buffer.byteLength, inputBuffers[j].byteLength); ++j) {\n                            writeUint8(impl.instance, requestedBufferInfo[i].bufferStart + j, inputBuffers[i][j]);\n                            ++this._bytesWritten;\n                        }\n                    }\n                }\n            }\n        });\n    }\n    bytesWritten() {\n        return this._bytesWritten;\n    }\n}\nexport class UnhandledFileReadEvent extends Error {\n    constructor(fd) {\n        super(`Unhandled read to file descriptor #${fd}.`);\n    }\n}\n/** POSIX readv */\nexport function fd_read(fd, iov, iovcnt, pnum) {\n    let nWritten = 0;\n    const gen = parseArray(this, iov, iovcnt);\n    // Get all the data to read in its separate buffers\n    //const asTypedArrays = [...gen].map(({ bufferStart, bufferLength }) => { nWritten += bufferLength; return new Uint8Array(this.getMemory().buffer, bufferStart, bufferLength) });\n    const event = new FileDescriptorReadEvent(this, fd, [...gen]);\n    if (this.dispatchEvent(event)) {\n        nWritten = 0;\n        /*if (fd == 0) {\n\n        }\n        else\n            return errorno.badf;*/\n    }\n    else {\n        nWritten = event.bytesWritten();\n    }\n    writeUint32(this.instance, pnum, nWritten);\n    return 0;\n}\nconst textDecoders = new Map();\nfunction getTextDecoder(label) {\n    let ret = textDecoders.get(label);\n    if (!ret) {\n        ret = new TextDecoder(label);\n        textDecoders.set(label, ret);\n    }\n    return ret;\n}\n","import \"../custom_event.js\";\nimport { errorno } from \"../errorno.js\";\nexport class FileDescriptorSeekEvent extends CustomEvent {\n    constructor(fileDescriptor) {\n        super(\"FileDescriptorSeekEvent\", { cancelable: true, detail: { fileDescriptor } });\n    }\n}\n/** POSIX lseek */\nexport function fd_seek(fd, offset, whence, offsetOut) {\n    switch (fd) {\n        case 0:\n            break;\n        case 1:\n            break;\n        case 2:\n            break;\n        default:\n            if (this.dispatchEvent(new FileDescriptorSeekEvent(fd)))\n                return errorno.badf;\n    }\n    return 0;\n}\n","import { getMemory, writeUint32 } from \"../../util.js\";\nimport \"../custom_event.js\";\nimport { errorno } from \"../errorno.js\";\nimport { parseArray } from \"../iovec.js\";\nexport class FileDescriptorWriteEvent extends CustomEvent {\n    constructor(fileDescriptor, data) {\n        super(\"FileDescriptorWriteEvent\", { bubbles: false, cancelable: true, detail: { data, fileDescriptor } });\n    }\n    asString(label) {\n        return this.detail.data.map((d, index) => {\n            let decoded = getTextDecoder(label).decode(d);\n            if (decoded == \"\\0\" && index == this.detail.data.length - 1)\n                return \"\";\n            return decoded;\n        }).join(\"\");\n    }\n}\nexport class UnhandledFileWriteEvent extends Error {\n    constructor(fd) {\n        super(`Unhandled write to file descriptor #${fd}.`);\n    }\n}\n/** POSIX writev */\nexport function fd_write(fd, iov, iovcnt, pnum) {\n    let nWritten = 0;\n    const gen = parseArray(this, iov, iovcnt);\n    // Get all the data to write in its separate buffers\n    const asTypedArrays = [...gen].map(({ bufferStart, bufferLength }) => { nWritten += bufferLength; return new Uint8Array(getMemory(this.instance).buffer, bufferStart, bufferLength); });\n    const event = new FileDescriptorWriteEvent(fd, asTypedArrays);\n    if (this.dispatchEvent(event)) {\n        const str = event.asString(\"utf-8\");\n        if (fd == 1)\n            console.log(str);\n        else if (fd == 2)\n            console.error(str);\n        else\n            return errorno.badf;\n    }\n    writeUint32(this.instance, pnum, nWritten);\n    return 0;\n}\nconst textDecoders = new Map();\nfunction getTextDecoder(label) {\n    let ret = textDecoders.get(label);\n    if (!ret) {\n        ret = new TextDecoder(label);\n        textDecoders.set(label, ret);\n    }\n    return ret;\n}\n","import \"../custom_event.js\";\nexport class AbortEvent extends CustomEvent {\n    code;\n    constructor(code) {\n        super(\"AbortEvent\", { bubbles: false, cancelable: false, detail: { code } });\n        this.code = code;\n    }\n}\nexport class AbortError extends Error {\n    constructor(code) {\n        super(`abort(${code}) was called`);\n    }\n}\nexport function proc_exit(code) {\n    this.dispatchEvent(new AbortEvent(code));\n    throw new AbortError(code);\n}\n","import { instantiateWasi } from \"./instantiate-wasi.js\";\nasync function instantiateGeneric(instantiateWasm, unboundImports) {\n    // There's a bit of song and dance to get around the fact that:\n    // 1. WASM needs its WASI imports immediately upon instantiation.\n    // 2. WASI needs its WASM Instance immediately upon instantiation.\n    // So we use promises to notify each that the other's been created.\n    const { promise: wasmReady, resolve: resolveWasm } = Promise.withResolvers();\n    const { imports, wasiReady } = instantiateWasi(wasmReady, unboundImports);\n    resolveWasm(await instantiateWasm({ ...imports }));\n    return await wasiReady;\n}\n/**\n * Like `WebAssembly.instantiateStreaming`, but also instantiates WASI with the `imports` you pass in.\n *\n * This exists just to remove simple boilerplate. You can easily re-implement if you need to fine-tune the behavior in some way.\n */\nexport async function instantiateStreamingWithWasi(response, unboundImports) {\n    return await instantiateGeneric(async (combinedImports) => await WebAssembly.instantiateStreaming(response, { ...combinedImports }), unboundImports);\n}\n/**\n * Like `WebAssembly.instantiate`, but also instantiates WASI with the `imports` you pass in.\n *\n * This exists just to remove simple boilerplate. You can easily re-implement if you need to fine-tune the behavior in some way.\n */\nexport async function instantiateWithWasi(module, unboundImports) {\n    return await instantiateGeneric(async (combinedImports) => ({ module, instance: await WebAssembly.instantiate(module, { ...combinedImports }) }), unboundImports);\n}\n/**\n * Like `instantiateWithWasi`, but takes the function returned by @rollup/plugin-wasm when a .wasm file is `import`ed by Javascript.\n *\n * This exists just to remove simple boilerplate. You can easily re-implement if you need to fine-tune the behavior in some way.\n */\nexport async function instantiateFromRollupWithWasi(wasmFetchPromise, unboundImports) {\n    return await instantiateGeneric(async (combinedImports) => await wasmFetchPromise(combinedImports), unboundImports);\n}\n","import { getInstanceExports } from \"./util.js\";\nexport class InvalidArrayLengthError extends Error {\n    constructor(sourceByteCount, targetItemSize) {\n        super(`The array could not be assigned because the source array is ${sourceByteCount} byte${sourceByteCount == 1 ? \"\" : \"s\"} long, which is not divisible by ${targetItemSize}, the number of bytes per element in the target array.`);\n    }\n}\n/**\n * Represents a `TypedArray` (e.g. `Int8Array`, etc.) that exists in WASM memory instead of JS memory.\n *\n * As this class is Disposable, it should be created with `using` so your program doesn't OOM.\n */\nclass NativeTypedArray {\n    TypedArray;\n    _instance;\n    _bytesPerWord;\n    // This is assigned in a function that's definitely called from the constructor\n    _impl;\n    _currentCount;\n    _ptr = null;\n    _malloc;\n    _realloc;\n    _free;\n    _updateTypedArrayImpl(newAddress, newCount) {\n        this._impl = new this.TypedArray(this._instance.exports.memory.buffer, newAddress, newCount);\n    }\n    /**\n     * Like `TypedArray.set`, this does not resize the array based on the input. If you're assigning to this array from a source, be sure to call `resize` first.\n     * @param other The source array to copy from\n     * @param offset Where to start writing to in this array\n     */\n    set(other, offset = 0) {\n        this._impl.set(other, offset);\n    }\n    /**\n     * This is simply `resize`, then `set`, with accommodation made for `TypedArray`s of different sizes\n     *\n     * @param other The source array that this array will copy into WASM memory. It can be any kind of `TypedArray`.\n     */\n    assign(other) {\n        const ourNewCount = other.byteLength / this._impl.BYTES_PER_ELEMENT;\n        if (Math.floor(ourNewCount) != ourNewCount) {\n            throw new InvalidArrayLengthError(other.byteLength, this._impl.BYTES_PER_ELEMENT);\n        }\n        this.resize(ourNewCount);\n        this.set(new this.TypedArray(other));\n    }\n    /**\n     * Identically to `TypedArray.at`, a negative `index` will count backwards from the end of the array.\n     */\n    at(index) { return this._impl.at(index); }\n    /**\n     * Resizes this array in WASM memory, allocating as necessary.\n     *\n     * It's recommended to just use `assign`, which copies an entire source array in one step, because\n     * as usual, reading the newly assigned memory before writing to it is undefined behavior and **will** immediately send you to crime jail.\n     *\n     * @param newCount The number of items in this array (not the total size in bytes)\n     */\n    resize(newCount) {\n        if (newCount != this._currentCount) {\n            const newByteCount = newCount * this._bytesPerWord;\n            if (this._ptr)\n                this._ptr = this._realloc(this._ptr, newByteCount);\n            else\n                this._ptr = this._malloc(newByteCount);\n            this._updateTypedArrayImpl(this._ptr, newCount);\n        }\n    }\n    /**\n     * Returns the address of this array (for use with other WASM functions that expect a pointer that points to an array)\n     */\n    get address() { return this._ptr; }\n    constructor(TypedArray, _instance, _bytesPerWord, initialCount) {\n        this.TypedArray = TypedArray;\n        this._instance = _instance;\n        this._bytesPerWord = _bytesPerWord;\n        this._malloc = getInstanceExports(_instance).malloc;\n        this._realloc = getInstanceExports(_instance).realloc;\n        this._free = getInstanceExports(_instance).free;\n        this._currentCount = initialCount || 0;\n        if (initialCount) {\n            this._ptr = this._malloc(initialCount * this._bytesPerWord);\n            this._updateTypedArrayImpl(this._ptr, initialCount);\n        }\n        else\n            this._ptr = null;\n        this._updateTypedArrayImpl(this._ptr || 0, initialCount || 0);\n    }\n    [Symbol.dispose]() {\n        if (this._ptr) {\n            this._free(this._ptr);\n        }\n    }\n}\nexport class NativeInt8Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Int8Array, instance, 1, initialCount); }\n}\nexport class NativeUint8Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint8Array, instance, 1, initialCount); }\n}\nexport class NativeUint8ClampedArray extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint8ClampedArray, instance, 1, initialCount); }\n}\nexport class NativeInt16Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Int16Array, instance, 2, initialCount); }\n}\nexport class NativeUint16Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint16Array, instance, 2, initialCount); }\n}\nexport class NativeInt32Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Int32Array, instance, 4, initialCount); }\n}\nexport class NativeUint32Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(Uint32Array, instance, 4, initialCount); }\n}\nexport class NativeBigInt64Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(BigInt64Array, instance, 8, initialCount); }\n}\nexport class NativeBigUint64Array extends NativeTypedArray {\n    constructor(instance, initialCount) { super(BigUint64Array, instance, 8, initialCount); }\n}\n","// This file does not import anything.\r\n// It holds space for a WebAssembly instance.\r\n// It only exists on the Worker thread.\r\n// `provideSource`, conversely, is made available to either thread (whichever one holds the binary source)\r\n//\r\n// The intention for this file is to make it easy to switch whether the **source** lives in the Worker or on Main (not the instantiation, just the source).\r\n\r\nimport { __throw_exception_with_stack_trace, emscripten_notify_memory_growth, environ_get, environ_sizes_get, fd_close, fd_read, fd_seek, fd_write, instantiateStreamingWithWasi, instantiateWithWasi, proc_exit } from \"basic-event-wasi\";\r\n\r\n\r\nexport const imports2 = {\r\n    env: { __throw_exception_with_stack_trace, emscripten_notify_memory_growth },\r\n    wasi_snapshot_preview1: { fd_write, proc_exit, fd_close, fd_read, fd_seek, environ_get, environ_sizes_get }\r\n};\r\n\r\ntype SourceTypes = string | ArrayBuffer | Response | WebAssembly.Module;\r\n\r\nconst { promise: sourceAsync, resolve: resolveSource, reject: rejectSource } = Promise.withResolvers<SourceTypes>();\r\nconst { promise: wasmAsync, resolve: resolveWasm, reject: rejectWasm } = Promise.withResolvers<WebAssembly.WebAssemblyInstantiatedSource>();\r\n\r\nlet wasmSync: WebAssembly.WebAssemblyInstantiatedSource | null = null;\r\n\r\nfunction getWasmSync(): WebAssembly.WebAssemblyInstantiatedSource | Partial<WebAssembly.WebAssemblyInstantiatedSource> { return wasmSync || {}; }\r\nasync function getWasmAsync() { return (await wasmAsync) || {}; }\r\n\r\n/**\r\n * Provide the Worker thread with the WASM binary source so that it can be instantiated.\r\n * \r\n * If this is on the Main thread, it's async (via Comlink). \r\n * If it's on the Worker thread, it's sync (via just calling it. directly.)\r\n * @param source \r\n */\r\nfunction provideSource(source: SourceTypes) {\r\n    try {\r\n        resolveSource(source);\r\n    }\r\n    catch (ex) {\r\n        rejectSource(ex);\r\n    }\r\n}\r\n\r\nexport {\r\n    // To get the instantiated binary (on the Worker thread), call these.\r\n    getWasmAsync,\r\n    getWasmSync,\r\n\r\n    // Whoever has the source to the WASM binary, be it the main thread or Worker thread\r\n    // should pass it here to `provideSource` (via e.g. Comlink). Doing so will instantiate the binary.\r\n    provideSource\r\n};\r\n\r\n\r\n\r\n// Once this module loads, immediately wait for someone to provide us with the binary source,\r\n// then instantiate it.\r\n(async () => {\r\n    try {\r\n        const obj = await sourceAsync;\r\n        if (typeof obj == \"string\") {\r\n            resolveWasm(wasmSync = await instantiateStreamingWithWasi(fetch(new URL(obj, import.meta.url)), imports2))\r\n        }\r\n        else if (obj instanceof Response) {\r\n            resolveWasm(wasmSync = await instantiateStreamingWithWasi(obj, imports2))\r\n        }\r\n        else if (obj instanceof ArrayBuffer || obj instanceof WebAssembly.Module) {\r\n            resolveWasm(wasmSync = await instantiateWithWasi(obj, imports2))\r\n        }\r\n    }\r\n    catch (e) {\r\n        rejectWasm(e);\r\n    }\r\n})()","import { writeUint32 } from \"../../util.js\";\nexport function environ_get(environCountOutput, environSizeOutput) {\n    writeUint32(this.instance, environCountOutput, 0);\n    writeUint32(this.instance, environSizeOutput, 0);\n    return 0;\n}\n","import { getInstanceExports } from \"basic-event-wasi\";\r\nimport { getWasmSync } from \"./instance.js\";\r\n\r\nexport type ReadableBarcodeFormats = \"Aztec\" | \"Codabar\" | \"Code128\" | \"Code39\" | \"Code93\" | \"DataBar\" | \"DataBarExpanded\" | \"DataMatrix\" | \"DXFilmEdge\" | \"EAN13\" | \"EAN8\" | \"ITF\" | \"LinearCodes\" | \"MatrixCodes\" | \"MaxiCode\" | \"MicroQRCode\" | \"None\" | \"PDF417\" | \"QRCode\" | \"RMQRCode\" | \"UPCA\" | \"UPCE\";\r\nexport type WritableBarcodeFormats = \"Aztec\" | \"Codabar\" | \"Code128\" | \"Code39\" | \"Code93\" | \"DataMatrix\" | \"EAN13\" | \"EAN8\" | \"ITF\" | \"PDF417\" | \"QRCode\" | \"UPCA\" | \"UPCE\";\r\nexport function convertFormat(input: WritableBarcodeFormats | ReadableBarcodeFormats): number {\r\n    const e = getInstanceExports(getWasmSync()!.instance!);\r\n    switch (input) {\r\n        case \"Aztec\": return e.formatAztec();\r\n        case \"Codabar\": return e.formatCodabar();\r\n        case \"Code128\": return e.formatCode128();\r\n        case \"Code39\": return e.formatCode39();\r\n        case \"Code93\": return e.formatCode93();\r\n        case \"DataMatrix\": return e.formatDataMatrix();\r\n        case \"EAN13\": return e.formatEAN13();\r\n        case \"EAN8\": return e.formatEAN8();\r\n        case \"ITF\": return e.formatITF();\r\n        case \"PDF417\": return e.formatPDF417();\r\n        case \"QRCode\": return e.formatQRCode();\r\n        case \"UPCA\": return e.formatUPCA();\r\n        case \"UPCE\": return e.formatUPCE();\r\n        case \"DataBar\": return e.formatDataBar();\r\n        case \"DataBarExpanded\": return e.formatDataBarExpanded();\r\n        case \"DXFilmEdge\": return e.formatDXFilmEdge();\r\n        case \"LinearCodes\": return e.formatLinearCodes();\r\n        case \"MatrixCodes\": return e.formatMatrixCodes();\r\n        case \"MaxiCode\": return e.formatMaxiCode();\r\n        case \"MicroQRCode\": return e.formatMicroQRCode();\r\n        case \"None\": return e.formatNone();\r\n        case \"RMQRCode\": return e.formatRMQRCode();\r\n    }\r\n}","import {\r\n    NativeUint8ClampedArray,\r\n    getInstanceExports\r\n} from \"basic-event-wasi\";\r\nimport { transfer } from \"comlink\";\r\nimport { WritableBarcodeFormats, convertFormat } from \"./barcode-formats.js\";\r\nimport { getWasmSync } from \"./instance.js\";\r\n\r\nlet arrayInWasmForEncodeSourceData: NativeUint8ClampedArray | undefined = undefined;\r\nfunction getEncodeSourceBuffer() {\r\n    const { instance } = getWasmSync()!;\r\n    if (instance && arrayInWasmForEncodeSourceData == undefined) {\r\n        return arrayInWasmForEncodeSourceData = new NativeUint8ClampedArray(instance, null);\r\n    }\r\n    return arrayInWasmForEncodeSourceData;\r\n}\r\n\r\ninterface EncodeResultNormal {\r\n    data: ArrayBuffer;\r\n    width: number;\r\n    height: number;\r\n    error?: undefined;\r\n}\r\n\r\ninterface EncodeResultError {\r\n    data: null;\r\n    width?: undefined;\r\n    height?: undefined;\r\n    error: 'wasm-not-instantiated' | 'empty-input'\r\n}\r\n\r\ntype EncodeResult = EncodeResultNormal | EncodeResultError;\r\n\r\nexport function encode(data: Uint8ClampedArray, encoding: \"binary\" | \"utf8\", format: WritableBarcodeFormats, ecc: number): EncodeResult {\r\n    const { instance } = getWasmSync()!;\r\n    const encodeBuffer = getEncodeSourceBuffer()\r\n\r\n    if (instance == null || encodeBuffer == null)\r\n        return { data: null, error: 'wasm-not-instantiated' };\r\n\r\n    if (data.length == 0 || data == null)   // ZXing explicitly throws on a zero-length array, so check for that.\r\n        return { data: null, error: 'empty-input' };\r\n\r\n    encodeBuffer.assign(data);\r\n\r\n    const csBinary = getInstanceExports(instance).characterSetBINARY();\r\n    const csUtf8 = getInstanceExports(instance).characterSetUTF8();\r\n    getInstanceExports(instance).generate(encodeBuffer.address!, data.byteLength, encoding == \"binary\" ? csBinary : csUtf8, convertFormat(format), ecc);\r\n\r\n    // Copy the image from WASM memory to JS memory\r\n    const generatedImagePtr = getInstanceExports(instance).getGeneratedImageData();\r\n    const generatedImageLength = getInstanceExports(instance).getGeneratedImageLength();\r\n    const generatedImageWidth = getInstanceExports(instance).getGeneratedImageWidth();\r\n    const generatedImageHeight = getInstanceExports(instance).getGeneratedImageHeight();\r\n    const input = new Uint8ClampedArray(getInstanceExports(instance).memory.buffer, generatedImagePtr, generatedImageLength);\r\n    const output = new Uint8ClampedArray(new ArrayBuffer(generatedImageLength));\r\n    output.set(input);\r\n\r\n    //const img = new ImageData(output, generatedImageWidth, generatedImageHeight);\r\n    return transfer({\r\n        data: output.buffer,\r\n        width: generatedImageWidth,\r\n        height: generatedImageHeight,\r\n    }, [output.buffer])\r\n}","import {\r\n    NativeUint8ClampedArray,\r\n    getInstanceExports,\r\n    getMemory\r\n} from \"basic-event-wasi\";\r\nimport { ReadableBarcodeFormats, convertFormat } from \"./barcode-formats.js\";\r\nimport { getWasmSync } from \"./instance.js\";\r\nimport { ScanResult, ScanResultCoordinate } from \"./shared.js\";\r\n\r\nlet arrayInWasmForCameraImageData: NativeUint8ClampedArray | undefined = undefined;\r\n\r\nfunction getCameraBuffer() {\r\n    const { instance } = getWasmSync()!;\r\n    if (instance && arrayInWasmForCameraImageData == undefined) {\r\n        return arrayInWasmForCameraImageData = new NativeUint8ClampedArray(instance, null);\r\n    }\r\n    return arrayInWasmForCameraImageData;\r\n}\r\n\r\n\r\nfunction* scan(rgbaImageData: Uint8ClampedArray, width: number, height: number, format: ReadableBarcodeFormats = \"QRCode\") {\r\n    const { instance } = getWasmSync()!;\r\n    const arrayInWasmForCameraImageData = getCameraBuffer();\r\n\r\n    if (instance == null || arrayInWasmForCameraImageData == null)\r\n        return null;\r\n\r\n    arrayInWasmForCameraImageData.resize(rgbaImageData.length);\r\n    arrayInWasmForCameraImageData.set(rgbaImageData);\r\n    let resultCount = getInstanceExports(instance).scan(arrayInWasmForCameraImageData.address!, width, height, convertFormat(format), true);\r\n\r\n    for (let i = 0; i < resultCount; ++i) {\r\n        const stringLength = getInstanceExports(instance).currentResultTextLength();\r\n        const pointerToCStr = getInstanceExports(instance).readCurrentResultText();\r\n        const dataLength = getInstanceExports(instance).currentResultDataLength();\r\n        const pointerToData = getInstanceExports(instance).readCurrentResultData();\r\n        const orientation = getInstanceExports(instance).currentResultOrientation();\r\n        const hash = getInstanceExports(instance).currentResultHash();\r\n        const positions = ([0, 1, 2, 3] as const).map(i => ({\r\n            x: getInstanceExports(instance!).positionOfCurrentResultX(i),\r\n            y: getInstanceExports(instance!).positionOfCurrentResultY(i),\r\n        })) as [ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate];\r\n\r\n        const text = (new TextDecoder(\"utf-8\")).decode(new Uint8Array(getMemory(instance).buffer, pointerToCStr, stringLength));\r\n        const dataBuffer = new ArrayBuffer(dataLength);\r\n        const data = new Uint8Array(dataBuffer);\r\n        data.set(new Uint8Array(getInstanceExports(instance).memory.buffer, pointerToData, dataLength));\r\n\r\n        getInstanceExports(instance).nextResult();\r\n\r\n        let ret: ScanResult = {\r\n            text,\r\n            data,\r\n            positions,\r\n            orientation,\r\n            hash\r\n        }\r\n\r\n        yield ret;\r\n    }\r\n}\r\n\r\nexport function scanAll(rgbaImageData: Uint8ClampedArray, width: number, height: number, format: ReadableBarcodeFormats = \"QRCode\"): ScanResult[] {\r\n    return [...scan(rgbaImageData, width, height, format)]\r\n}","import { getWasmAsync } from \"./instance.js\";\r\nexport { provideSource } from \"./instance.js\";\r\n\r\nexport interface ScanResultCoordinate {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface ScanResult {\r\n    text: string;\r\n    hash: number;\r\n    data: Uint8Array;\r\n    /**\r\n     * Order is clockwise from top-left:\r\n     * * top-left\r\n     * * top-right\r\n     * * bottom-right\r\n     * * bottom-left\r\n     */\r\n    positions: [ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate, ScanResultCoordinate];\r\n\r\n    /** Measured in degrees, may be negative */\r\n    orientation: number;\r\n}\r\n\r\n\r\n\r\nexport async function waitUntilReady() {\r\n    await getWasmAsync();\r\n    return;\r\n}\r\n\r\n\r\n\r\n","//import \"core-js\";\r\n\r\nimport { expose } from \"comlink\";\r\nimport * as Encoder from \"./encoder.js\";\r\nimport * as Scanner from \"./scanner.js\";\r\nimport * as Shared from \"./shared.js\";\r\n\r\nexpose({ ...Scanner, ...Encoder, ...Shared });\r\n\r\nexport * from \"./encoder.js\";\r\nexport * from \"./scanner.js\";\r\nexport * from \"./shared.js\";\r\n\r\n"],"names":["parseArray","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","r","l","t","Symbol","iterator","e","n","u","a","f","o","call","next","Object","done","push","value","length","return","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","from","test","len","arr2","_callSuper","_getPrototypeOf","self","_typeof","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","ReferenceError","_inherits","subClass","superClass","create","writable","configurable","defineProperty","_setPrototypeOf","_wrapNativeSuper","Class","_cache","Map","undefined","_isNativeFunction","fn","Function","indexOf","has","get","set","Wrapper","_construct","arguments","p","bind","enumerable","Boolean","valueOf","setPrototypeOf","__proto__","getPrototypeOf","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","obj","toPrimitive","String","Number","_toPrimitive","_globalThis$Event","globalThis","Event","_Event","type_","eventInitDict","this","bubbles","cancelBubble","cancelable","composed","currentTarget","defaultPrevented","eventPhase","NONE","isTrusted","returnValue","srcElement","timeStamp","type","_globalThis$CustomEve","CustomEvent","_Event2","_this","detail","_type","_bubbles","_cancelable","MemoryGrowthEvent","_CustomEvent2","impl","index","WebAssemblyExceptionEvent","_CustomEvent3","exception","wasi","instantiateWasi","wasmInstance","unboundImports","_dispatchEvent","resolve","dispatchEvent","console","warn","event","concat","module","cachedMemoryView","then","DataView","exports","memory","buffer","assert","_initialize","_start","imports","wasi_snapshot_preview1","bindAllFuncs","env","wasiReady","Promise","res","fromEntries","entries","map","_ref2","_ref3","func","getMemory","getImpl","readUint32","ptr","getUint32","writeUint32","setUint32","readPointer","getInstanceExports","FileDescriptorCloseEvent","_CustomEvent4","fileDescriptor","parse","info","bufferStart","bufferLength","count","sizeofStruct","_regeneratorRuntime","wrap","_context","prev","getPointerSize","stop","_marked","errorno","FileDescriptorReadEvent","_CustomEvent5","requestedBufferInfo","_this2","requestedBuffers","readIntoMemory","inputBuffers","j","Math","min","byteLength","setUint8","_bytesWritten","FileDescriptorSeekEvent","_CustomEvent6","FileDescriptorWriteEvent","_CustomEvent7","data","label","_this3","d","decoded","ret","textDecoders","TextDecoder","getTextDecoder","decode","join","AbortEvent","_CustomEvent8","code","_this5","AbortError","_Error","Error","instantiateGeneric","_x","_x2","_instantiateGeneric","_asyncToGenerator","mark","_callee3","instantiateWasm","_Promise$withResolver3","wasmReady","resolveWasm","_instantiateWasi","_context4","withResolvers","promise","t0","_objectSpread","t1","sent","abrupt","instantiateStreamingWithWasi","_x3","_x4","_instantiateStreamingWithWasi","_callee5","response","_context6","_ref6","_callee4","combinedImports","_context5","WebAssembly","instantiateStreaming","_x7","instantiateWithWasi","_x5","_x6","_instantiateWithWasi","_callee7","_context8","_ref7","_callee6","_context7","instantiate","_x8","InvalidArrayLengthError","_Error2","sourceByteCount","targetItemSize","_Symbol$dispose","dispose","NativeTypedArray","TypedArray","_instance","_bytesPerWord","initialCount","_malloc","malloc","_realloc","realloc","_free","free","_currentCount","_ptr","_updateTypedArrayImpl","newAddress","newCount","_impl","other","offset","ourNewCount","BYTES_PER_ELEMENT","floor","resize","at","newByteCount","NativeUint8ClampedArray","_NativeTypedArray2","Uint8ClampedArray","imports2","__throw_exception_with_stack_trace","ex","emscripten_notify_memory_growth","fd_write","fd","iov","iovcnt","pnum","_this4","nWritten","asTypedArrays","_toConsumableArray","_ref4","Uint8Array","str","asString","log","badf","error","proc_exit","fd_close","fd_read","gen","bytesWritten","fd_seek","whence","offsetOut","environ_get","environCountOutput","environSizeOutput","environ_sizes_get","_Promise$withResolver","sourceAsync","resolveSource","rejectSource","reject","_Promise$withResolver2","wasmAsync","rejectWasm","wasmSync","getWasmSync","getWasmAsync","_getWasmAsync","_callee8","_context9","provideSource","source","convertFormat","input","formatAztec","formatCodabar","formatCode128","formatCode39","formatCode93","formatDataMatrix","formatEAN13","formatEAN8","formatITF","formatPDF417","formatQRCode","formatUPCA","formatUPCE","formatDataBar","formatDataBarExpanded","formatDXFilmEdge","formatLinearCodes","formatMatrixCodes","formatMaxiCode","formatMicroQRCode","formatNone","formatRMQRCode","_callee","_context2","fetch","URL","url","Response","t2","t3","ArrayBuffer","Module","t4","t5","t6","arrayInWasmForEncodeSourceData","encode","encoding","format","ecc","encodeBuffer","getEncodeSourceBuffer","assign","csBinary","characterSetBINARY","csUtf8","characterSetUTF8","generate","address","generatedImagePtr","getGeneratedImageData","generatedImageLength","getGeneratedImageLength","generatedImageWidth","getGeneratedImageWidth","generatedImageHeight","getGeneratedImageHeight","output","transfer","width","height","arrayInWasmForCameraImageData","getCameraBuffer","scanAll","rgbaImageData","_callee2","_getWasmSync4","resultCount","stringLength","pointerToCStr","dataLength","pointerToData","orientation","hash","positions","text","dataBuffer","_context3","scan","currentResultTextLength","readCurrentResultText","currentResultDataLength","readCurrentResultData","currentResultOrientation","currentResultHash","x","positionOfCurrentResultX","y","positionOfCurrentResultY","nextResult","waitUntilReady","_waitUntilReady","_callee9","_context10","expose","Scanner","Encoder","Shared"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2MAOiBA;AAAU,SAAAC,EAAAC,EAAAC,UAAA,SAAAD,GAAAE,GAAAA,MAAAC,QAAAH,GAAA,OAAAA,CAAA,CAAAI,CAAAJ,IAAA,SAAAK,EAAAC,GAAA,IAAAC,EAAAF,MAAAA,EAAAG,KAAAA,oBAAAA,QAAAH,EAAAG,OAAAC,WAAAJ,EAAA;AAAA,GAAA,MAAAE,EAAA,CAAA,IAAAG,EAAAC,EAAAV,EAAAW,EAAAC,EAAAC,GAAAA,GAAAC,EAAAA,GAAAd;AAAAA,IAAAA,GAAAA,GAAAM,EAAAA,EAAAS,KAAAX,IAAAY,KAAA,IAAAX,EAAA,CAAA,GAAAY,OAAAX,KAAAA,EAAA;AAAAO,GAAA,CAAA,MAAA,OAAAA,GAAAJ,EAAAT,EAAAe,KAAAT,IAAAY,QAAAN,EAAAO,KAAAV,EAAAW,OAAAR,EAAAS,SAAAhB,GAAAQ,GAAA,GAAA,CAAA,MAAAT,GAAAU,GAAAJ,EAAAA,EAAAN,CAAAS,CAAAA,QAAAA,IAAAA,IAAAA,GAAAP,MAAAA,EAAAgB,SAAAX,EAAAL,EAAAgB,SAAAL,OAAAN,KAAAA,GAAA,MAAA,CAAA,QAAA,GAAAG,EAAA,MAAAJ,CAAA,CAAA,CAAA,OAAAE,CAAA,CAAA,CAAAW,CAAAxB,EAAAC,IAAAwB,EAAAzB,EAAAC,IAAA,qBAAAyB,UAAA,4IAAA,CAAAC,EAAA,CAAA,SAAAF,EAAAV,EAAAa,GAAAb,GAAAA,EAAAA,CAAAA,GAAAc,iBAAAd,EAAAc,OAAAA,EAAAd,EAAAa;AAAAjB,IAAAA,EAAAO,OAAAY,UAAAC,SAAAf,KAAAD,GAAAiB;AAAA,MAAA,WAAArB,GAAAI,EAAAkB,cAAAtB,EAAAI,EAAAkB,YAAAC,MAAA,QAAAvB,GAAAT,QAAAS,EAAAT,MAAAiC,KAAApB,GAAAqB,cAAAzB,GAAAyB,2CAAAA,KAAAzB,GAAAkB,EAAAd,EAAAa,QAAAjB,CAAAI,CAAA,CAAA,SAAAc,EAAA7B,EAAAqC,UAAAA,GAAAA,EAAArC,EAAAsB,UAAAe,EAAArC,EAAAsB;AAAArB,IAAAA,IAAAA,EAAAqC,EAAAA,MAAApC,MAAAmC,GAAApC,EAAAoC,EAAApC,IAAAqC,EAAArC,GAAAD,EAAAC;OAAAqC,CAAA,CAAA,SAAAC,EAAAhC,EAAAQ,EAAAL,GAAAK,OAAAA,EAAAyB,EAAAzB,GAAA,SAAA0B,EAAAzB,MAAAA,eAAA0B,EAAA1B,IAAA,mBAAAA,GAAA,OAAAA;AAAAA,YAAAA,YAAAU,UAAA;AAAA,OAAAiB,EAAAF,EAAA,CAAAG,CAAArC,EAAAsC,IAAAC,QAAAC,UAAAhC,EAAAL,GAAA,GAAA8B,EAAAjC,GAAA0B,aAAAlB,EAAAiC,MAAAzC,EAAAG,GAAA,CAAA,SAAAiC,EAAAF,GAAA,QAAAQ,IAAAR,EAAAQ,MAAAA,IAAAA;OAAAR,CAAA,CAAA,SAAAS,EAAAC,EAAAC,MAAA,mBAAAA,GAAA,OAAAA,EAAA,MAAA,IAAA1B,UAAA;AAAAyB,EAAArB,UAAAZ,OAAAmC,OAAAD,GAAAA,EAAAtB,WAAAG,YAAA,CAAAZ,MAAA8B,EAAAG,UAAA,EAAAC,cAAA,KAAArC,OAAAsC,eAAAL,EAAAG,YAAAA,CAAAA,UAAAF,IAAAA,GAAAK,EAAAN,EAAAC,EAAA,CAAA,SAAAM,EAAAC,GAAAC,IAAAA,EAAA,mBAAAC,IAAA,IAAAA,SAAAC;AAAA,OAAAJ,EAAA,SAAAC,GAAA,GAAAI,OAAAJ,IAAA,SAAAK,GAAAC,IAAAA,OAAAvD,IAAAuD,SAAAlC,SAAAf,KAAAgD,GAAAE,QAAAxD,gBAAAA,CAAAA,MAAAA,SAAA,mBAAAsD,CAAA,CAAA,CAAAD,CAAAJ,GAAA,OAAAA;AAAAA,sBAAAA,YAAAjC,UAAA;AAAA,QAAAkC,IAAAA,EAAAA,CAAAA,GAAAA,EAAAO,IAAAR,GAAAC,OAAAA,EAAAQ,IAAAT;AAAAC,EAAAS,IAAAV,EAAAW,EAAA,CAAA,SAAAA,IAAAC,OAAA,SAAAhE,EAAAG,EAAAL,GAAA,GAAAwC,IAAA,OAAAC,QAAAC,UAAAC,MAAAwB,KAAAA;AAAAzD,IAAAA;AAAAA,EAAAK,KAAA4B,MAAAjC,EAAAL;AAAA+D,IAAAA,EAAAlE,IAAAA,EAAAmE,KAAA1B,MAAAzC,EAAAQ;AAAAV,OAAAA,GAAAoD,EAAAgB,EAAApE,EAAAyB,WAAA2C,CAAA,CAAAF,CAAAZ,EAAAa,UAAAhC,QAAAP,YAAA,CAAA,OAAAqC,EAAAxC,UAAAZ,OAAAmC,OAAAM,EAAA7B,UAAA,CAAAG,YAAAZ,CAAAA,MAAAiD,EAAAK,YAAArB,EAAAA,YAAAC,cAAA,KAAAE,EAAAa,EAAAX,EAAA,EAAAD,EAAAC,EAAA,CAAA,SAAAd,IAAAtC,IAAAA,IAAAA,GAAAqE,QAAA9C,UAAA+C,QAAA7D,KAAA8B,QAAAC,UAAA6B,QAAArE,IAAAA,WAAAA,IAAAA,CAAAA,MAAAA,WAAAsC,EAAA,WAAA,QAAAtC,CAAA,IAAA,CAAA,SAAAkD,EAAA1C,EAAA0D,GAAAhB,OAAAA,EAAAvC,OAAA4D,eAAA5D,OAAA4D,eAAAJ,OAAA,SAAA3D,EAAA0D,GAAA,OAAA1D,EAAAgE,UAAAN,EAAA1D,CAAA0C,EAAAA,EAAA1C,EAAA0D,EAAA,CAAA,SAAAjC,EAAAzB,GAAAyB,OAAAA,EAAAtB,OAAA4D,eAAA5D,OAAA8D,eAAAN,OAAA,SAAA3D,GAAAA,OAAAA,EAAAgE,WAAA7D,OAAA8D,eAAAjE,EAAAyB,EAAAA,EAAAzB,EAAA,CAAA,SAAAkE,EAAAC,EAAAC,QAAAD,aAAAC,GAAA,MAAA,IAAAzD,UAAA,oCAAA,CAAA,SAAA0D,EAAAC,EAAAC,WAAArF,EAAA,EAAAA,EAAAqF,EAAAhE,OAAArB,IAAAsF,CAAAA,IAAAA,EAAAD,EAAArF;AAAAsF,EAAAZ,WAAAY,EAAAZ,aAAAY,EAAAA,EAAAhC,0BAAAgC,IAAAA,EAAAjC,UAAA,GAAApC,OAAAsC,eAAA6B,EAAAG,EAAAD,EAAAE,KAAAF,EAAA,CAAA,CAAA,SAAAG,EAAAP,EAAAQ,EAAAC,UAAAD,GAAAP,EAAAD,EAAArD,UAAA6D,GAAAC,GAAAR,EAAAD,EAAAS,GAAA1E,OAAAsC,eAAA2B,EAAA7B,YAAAA,CAAAA,cAAA6B,CAAA,CAAA,SAAAU,EAAAC,EAAAL,EAAApE,UAAAoE,EAAAD,EAAAC,MAAAK,EAAA5E,OAAAsC,eAAAsC,EAAAL,EAAA,CAAApE,MAAAA,EAAAsD,YAAA,EAAApB,cAAAD,EAAAA,cAAAwC,EAAAL,GAAApE,EAAAyE,CAAA,CAAA,SAAAN,EAAAjF,GAAA,IAAAN,EAAA,SAAAM,EAAAF,gBAAAqC,EAAAnC,KAAAA,SAAAA;AAAA,IAAAG,EAAAH,EAAAC,OAAAuF;AAAA,QAAA,IAAArF,EAAA,CAAA,IAAAT,EAAAS,EAAAM,KAAAT,EAAAF,GAAAqC;AAAAA,GAAAA,UAAAA,EAAAzC,UAAAA;AAAA,MAAA,IAAAyB,UAAArB,+CAAAA,CAAAA,OAAAA,WAAAA,EAAA2F,OAAAC,QAAA1F,EAAA,CAAA2F,CAAA3F,EAAAmC;AAAAA,MAAAA,UAAAA,EAAAzC,GAAAA,EAAA+F,OAAA/F,EAAA;ACLXkG,QAAhBA,EAAAC,WAAWC,aAAKF,IAAAA,IAAhBC,WAAWC,OAAKC,EAAA,WACZ,SAAAD,EAAYE,EAAOC,GAAevB,OAAAoB,GAAAR,EAAAY,KAAA,eAAA,GAAAZ,EAAAY,KAAA,oBAAA,GAAAZ,EAAAY,KAAA,kBAAA,GAAAZ,EAAAY,KAAA,gBAAA,GAAAZ,EAAAY,KAAA,qBAAA,GAAAZ,EAAAY,KAAA,wBAAA,GAAAZ,EAAAY,KAAA,kBAAA,GAAAZ,EAAAY,KAAA,iBAAA,GAAAZ,EAAAY,KAAA,mBAAA,GAAAZ,EAAAY,KAAA,kBAAA,GAAAZ,EAAAY,KAAA,cAAA,GAAAZ,EAAAY,KAAA,iBAAA,GAAAZ,EAAAY,KAAA,YAAA,GAC9BA,KAAKC,SAAUF,aAAa,EAAbA,EAAeE,WAAW,EACzCD,KAAKE,cAAe,EACpBF,KAAKG,YAAaJ,aAAa,EAAbA,EAAeI,cAAc,EAC/CH,KAAKI,UAAWL,aAAa,EAAbA,EAAeK,YAAY,EAC3CJ,KAAKK,cAAgB,KACrBL,KAAKM,kBAAmB,EACxBN,KAAKO,WAAaX,EAAMY,KACxBR,KAAKS,WAAY,EACjBT,KAAKU,aAAc,EACnBV,KAAKW,WAAa,KAClBX,KAAKpB,OAAS,KACdoB,KAAKY,UAAY,EACjBZ,KAAKa,KAAOf,CACf,CAsBoB,OAtBpBb,EAAAW,EAAA,CAAA,CAAAZ,IAAA,eAAApE,MAkBD,WAAiB,MAAO,EAAK,GAAA,CAAAoE,IAAA,YAAApE,MAC7B,SAAUkF,EAAOG,EAASE,GAAcH,KAAKa,KAAOf,EAAOE,KAAKC,QAAUA,GAAWD,KAAKC,QAASD,KAAKG,WAAaA,GAAcH,KAAKG,UAAa,GAAA,CAAAnB,IAAA,iBAAApE,MACrJ,WAAmBoF,KAAKM,kBAAmB,CAAO,GAAA,CAAAtB,IAAA,2BAAApE,MAClD,WAA8B,GAAA,CAAAoE,IAAA,kBAAApE,MAC9B,WAAqB,KAAAgF,CAAA,CArCT,GAqCSR,EAAAS,EArBP,OAAA,GAACT,EAAAS,EAAA,kBACU,GAACT,EAAAS,EACP,YAAA,GAACT,EAAAS,EAAA,iBACI,GAACA,ICnBPiB,QAAtBA,EAAAnB,WAAWoB,mBAAWD,IAAAA,IAAtBnB,WAAWoB,qBAAWC,GAClB,SAAAD,EAAYF,EAAMd,GAAe,IAAAkB;AAEO,OAFPzC,OAAAuC,GACF3B,EAAAlD,EAA3B+E,EAAAnF,EAAAkE,KAAAe,EAAMF,CAAAA,EAAMd,KAAe,cAAA,GAC3BkB,EAAKC,OAASnB,aAAa,EAAbA,EAAemB,OAAOD,CACvC,CAKA,OATiBxE,EAAAsE,EASjB9D,EATgD2C,QAIhDX,EAAA8B,EAAA,CAAA,CAAA/B,IAAA,kBAAApE,MAED,SAAgBuG,EAAOC,EAAUC,EAAaH,GAE1ClB,KAAKkB,OAAUA,QAAAA,EAAUlB,KAAKkB,MACjC,KAAAH,CAAA;AACJ,ICXYO,WAAiBC,GAC1B,SAAAD,EAAYE,EAAMC,GAAO,OAAAjD,OAAA8C,GAAAxF,EAAAkE,KAAAsB,EAAA,CACf,oBAAqB,CAAEnB,YAAY,EAAOe,OAAQ,CAAEO,MAAAA,KAC7D,CAAA,OAHyBhF,EAAA6E,EAGzBrE,EAHkC8D,cAGlC9B,EAAAqC,EAAA;AAIL,ICPaI,WAAyBC,GAClC,SAAAD,EAAYF,EAAMI,GAAW,OAAApD,OAAAkD,GAAA5F,EAAAkE,KAAA0B,EAAA,CACnB,4BAA6B,CAAEvB,YAAY,EAAOe,OAAQ,CAAEU,UAAAA,KACrE,CAAA,OAHiCnF,EAAAiF,EAGjCzE,EAH0C8D,cAG1C9B,EAAAyC,EAAA;ACJL,IAAMG,EAAO9H,OAAO;AA+Bb,SAAS+H,EAAgBC,EAAcC,GAAwC,IAAAC,EAa9EC,EAbwDC,GAAsBpE,UAAAlD,OAAA,QAAAwC,IAAAU,UAAA,GAAAA,UAAA,GAAJ,CAAA,GAAlBoE;AACvDA,GAAmB,kBAAmBxC,YACvCyC,QAAQC,KAAI,8FAEH,QAAbJ,EAAAE,SAAaF,IAAAA,IAAbE,EAAkB,SAAuBG,GACrC,MAAI,kBAAmB3C,WACZA,WAAWwC,cAAcG,IAGhCF,QAAQC,KAAI,oBAAAE,OAAqBD,KAC1B,EAEnB;AAEI,IAAMtE,EAAI,CACNS,SAAU,KACV+D,OAAQ,KAERC,iBAAkB,KAClBN,cAAa,SAAClI,GAAK,OAAOkI,EAAclI,EAAK;AAsBjD,OApBA8H,EAAaW,MAAK,SAACrD,GACf,IAAQZ,EAAqBY,EAArBZ,SAAU+D,EAAWnD,EAAXmD;AAClBxE,EAAES,SAAWA,EACbT,EAAEwE,OAASA,EACX/D,EAASoD,GAAQ7D,EACjBA,EAAEyE,iBAAmB,IAAIE,SAASlE,EAASmE,QAAQC,OAAOC,QAC1DV,QAAQW,OAAQ,gBAAiB/E,EAAES,SAASmE,SAAY,WAAY5E,EAAES,SAASmE,SAC3E,gBAAiB5E,EAAES,SAASmE,QAC5B5E,EAAES,SAASmE,QAAQI,cAEd,WAAYhF,EAAES,SAASmE,SAC5B5E,EAAES,SAASmE,QAAQK,SAEvBf,EAAQ7C,EAChB,IAMW,CACH6D,QAFiB,CAAEC,uBAFQC,EAAapF,EAAGgE,EAAemB,wBAEfE,IADnCD,EAAapF,EAAGgE,EAAeqB,MAMvCC,UAAW,IAAIC,SAAQ,SAACC,GAAUtB,EAAUsB,KAEpD,CAKA,SAASJ,EAAapF,EAAGpE,GACrB,OAAOa,OAAOgJ,YAAYhJ,OAAOiJ,QAAQ9J,GAAG+J,KAAI,SAAAC,GAAiB,IAAAC,EAAAvK,EAAAsK,EAAA,GAAf5E,EAAG6E,EAAA,GAAEC,EAAID,EAAA;AAAQ,MAAO,CAAC7E,EAAqB,mBAAR8E,EAAqBA,EAAK7F,KAAKD,GAAK8F,EAAS,IACzI,CCpFO,SAASC,EAAUtF,GACtB,OD6EG,SAAiBA,GACpB,OAAOA,EAASoD,EACpB,CC/EWmC,CAAQvF,GAAUgE,gBAC7B,CAMO,SAASwB,EAAWxF,EAAUyF,GAAO,OAAOH,EAAUtF,GAAU0F,UAAUD,GAAK,EAAQ,CAQvF,SAASE,EAAY3F,EAAUyF,EAAKtJ,GAAS,OAAOmJ,EAAUtF,GAAU4F,UAAUH,EAAKtJ,GAAO,EAAQ,CAMtG,SAAS0J,EAAY7F,EAAUyF,GAAO,OAAOH,EAAUtF,GAAU0F,UAAUD,GAAK,EAAQ,CAExF,SAASK,EAAmB9F,GAC/B,OAAOA,EAASmE,OACpB,CCtBA,ICJa4B,WAAwBC,GACjC,SAAAD,EAAYE,GAAgB,OAAAlG,OAAAgG,GAAA1I,EAAAkE,KAAAwE,EAAA,CAClB,2BAA4B,CAAErE,YAAY,EAAMe,OAAQ,CAAEwD,eAAAA,KACnE,CAAA,OAHgCjI,EAAA+H,EAGhCvH,EAHyC8D,cAGzC9B,EAAAuF,EAAA;ARHE,SAASG,EAAMC,EAAMV,GACxB,MAAO,CACHW,YAAaP,EAAYM,EAAKnG,SAAUyF,GACxCY,aAAcb,EAAWW,EAAKnG,SAAUyF,GAAqBU,EAAKnG,SMoBvB,INlBnD,CACO,SAAUpF,EAAWuL,EAAMV,EAAKa,GAAK,IAAAC,EAAAxL;AAAA,OAAAyL,IAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3K,MAAA,KAAA,EACJoK,EAAKnG,SAAnCuG,EAAeK,EACZ7L,EAAI;AAAC,KAAA,EAAA,KAAEA,EAAIuL,GAAK,CAAAI,EAAA3K,KAAA;AAAA,KAAA,CACrB,OADqB2K,EAAA3K,KAAA,EACfmK,EAAMC,EAAMV,EAAO1K,EAAIwL;AAAc,KAAA,IADlBxL,EAAC2L,EAAA3K,KAAA;AAAA;AAAA,KAAA,EAAA,IAAA,MAAA,OAAA2K,EAAAG,OAAA,GAAAC,EAAA,CAGlC,ISZWC,ECGEC,WAAuBC,GAEhC,SAAAD,EAAYjE,EAAMkD,EAAgBiB,GAAqB,IAAAC;AADtC,OACsCpH,OAAAiH,GAoBhDrG,EAAAlD,EAnBH0J,EAAA9J,EAAAkE,KAAAyF,EAAA,CAAM,0BAA2B,CAC7BxF,SAAS,EACTE,YAAY,EACZe,OAAQ,CACJwD,eAAAA,EACAmB,iBAAkBF,EAClBG,eAAgB,SAACC,GAEb,IAAK,IAAIvM,EAAI,EAAGA,EAAImM,EAAoB9K,UAChCrB,GAAKuM,EAAalL,UADwBrB,EAI9C,IADA,IAAMsJ,EAASiD,EAAavM,GACnBwM,EAAI,EAAGA,EAAIC,KAAKC,IAAIpD,EAAOqD,WAAYJ,EAAaC,GAAGG,cAAeH,EJG5EvH,EIFY+C,EAAK/C,SJEPyF,EIFiByB,EAAoBnM,GAAGqL,YAAcmB,EJEjDpL,EIFoDmL,EAAavM,GAAGwM,GJEpDjC,EAAUtF,GAAU2H,SAASlC,EAAKtJ,KID9DgL,EAAKS;AJC5B,IAAoB5H,EAAUyF,EAAKtJ,CIEzB,uBAnBG,GAACgL,CAsBhB,CAGA,OA1B+BnJ,EAAAgJ,EA0B/BxI,EA1BwC8D,cAuBxC9B,EAAAwG,EAAA,CAAA,CAAAzG,IAAA,eAAApE,MACD,WACI,OAAOoF,KAAKqG,aACf,KAAAZ,CAAA;CD5BL,SAAWD,GACPA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAgB,OAAI,GAAK,SACjCA,EAAQA,EAAe,MAAI,GAAK,QAChCA,EAAQA,EAAmB,UAAI,GAAK,YACpCA,EAAQA,EAAsB,aAAI,GAAK,eACvCA,EAAQA,EAAqB,YAAI,GAAK,cACtCA,EAAQA,EAAe,MAAI,GAAK,QAChCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAc,KAAI,GAAK,OAC/BA,EAAQA,EAAgB,OAAI,GAAK,SACjCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAmB,UAAI,IAAM,YACrCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAiB,QAAI,IAAM,UACnCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAiB,QAAI,IAAM,UACnCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAiB,QAAI,IAAM,UACnCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAwB,eAAI,IAAM,iBAC1CA,EAAQA,EAAiB,QAAI,IAAM,UACnCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAmB,UAAI,IAAM,YACrCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAwB,eAAI,IAAM,iBAC1CA,EAAQA,EAAmB,UAAI,IAAM,YACrCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAe,MAAI,IAAM,QACjCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAoB,WAAI,IAAM,YACzC,CA9ED,CA8EGA,IAAYA,EAAU,CAAA;AAAI,IE7EhBc,WAAuBC,GAChC,SAAAD,EAAY5B,GAAgB,OAAAlG,OAAA8H,GAAAxK,EAAAkE,KAAAsG,EAAA,CAClB,0BAA2B,CAAEnG,YAAY,EAAMe,OAAQ,CAAEwD,eAAAA,KAClE,CAAA,OAH+BjI,EAAA6J,EAG/BrJ,EAHwC8D,cAGxC9B,EAAAqH,EAAA;AAgBL,ICjBaE,WAAwBC,GACjC,SAAAD,EAAY9B,EAAgBgC,GAAM,OAAAlI,OAAAgI,GAAA1K,EAAAkE,KAAAwG,EAAA,CACxB,2BAA4B,CAAEvG,SAAS,EAAOE,YAAY,EAAMe,OAAQ,CAAEwF,KAAAA,EAAMhC,eAAAA,KACzF,CAQA,OAXgCjI,EAAA+J,EAWhCvJ,EAXyC8D,cAGzC9B,EAAAuH,EAAA,CAAA,CAAAxH,IAAA,WAAApE,MACD,SAAS+L,GAAO,IAAAC,EAAA5G;AACZ,OAAOA,KAAKkB,OAAOwF,KAAK/C,KAAI,SAACkD,EAAGpF,GAC5B,IAAIqF,EAgChB,SAAwBH,GACpB,IAAII,EAAMC,EAAarJ,IAAIgJ;AACtBI,IACDA,EAAM,IAAIE,YAAYN,GACtBK,EAAapJ,IAAI+I,EAAOI;AAE5B,OAAOA,CACX,CAvC0BG,CAAeP,GAAOQ,OAAON;AAC3C,MAAe,MAAXC,GAAmBrF,GAASmF,EAAK1F,OAAOwF,KAAK7L,OAAS,EAC/C,GACJiM,CACnB,IAAWM,KAAK,GACX,KAAAZ,CAAA;AA0BL,IAAMQ,EAAe,IAAI5J;AAQzB,IChDaiK,WAAUC,GAEnB,SAAAD,EAAYE,GAAM,IAAAC;AAEG,OAFHhJ,OAAA6I,GAC+DjI,EAAAlD,EAA7EsL,EAAA1L,EAAAkE,KAAAqH,EAAA,CAAM,aAAc,CAAEpH,SAAS,EAAOE,YAAY,EAAOe,OAAQ,CAAEqG,KAAAA,OAAU,YAAA,GAC7EC,EAAKD,KAAOA,EAAKC,CACpB,CAAA,OALkB/K,EAAA4K,EAKlBpK,EAL2B8D,cAK3B9B,EAAAoI,EAAA,IAEQI,WAAUC,GACnB,SAAAD,EAAYF,GAAM,OAAA/I,OAAAiJ,GAAA3L,EAAA2L,KAAAA,EAAAlF,CAAAA,SAAAA,OACCgF,EAAI,iBACtB,CAAA,OAHkB9K,EAAAgL,EAGlBxK,EAH2B0K,QAG3B1I,EAAAwI,EAAA;AAKL,SCfeG,EAAkBC,EAAAC,GAAA,OAAAC,EAAAxL,MAAAyD,KAAAjC,UAAA,CAUjC,SAAAgK,IADC,OACDA,EAAAC,EAAA/C,IAAAgD,MAVA,SAAAC,EAAkCC,EAAiBnG,GAAc,IAAAoG,EAAAC,EAAAC,EAAAC,EAAArF,EAAAI;AAAA,OAAA2B,IAAAC,MAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAhO,MAAA,KAAA,EAOlD,OAHf4N,EACyD7E,QAAQkF,gBAA5CJ,EAASD,EAAlBM,QAA6BJ,EAAWF,EAApBlG,QAAOqG,EACJzG,EAAgBuG,EAAWrG,GAAlDkB,EAAOqF,EAAPrF,QAASI,EAASiF,EAATjF,UAASkF,EAAAG,GAC1BL,EAAWE,EAAAhO,KAAA,EAAO2N,EAAeS,EAAM1F,CAAAA,EAAAA;AAAU,KAAA,EAAA,OAAAsF,EAAAK,GAAAL,EAAAM,MAAA,EAAAN,EAAAG,IAAAH,EAAAK,IAAAL,EAAAhO,KAAA,EACpC8I;AAAS,KAAA,EAAA,OAAAkF,EAAAO,OAAAP,SAAAA,EAAAM;AAAA,KAAA,GAAA,IAAA,MAAA,OAAAN,EAAAlD,OAAA,GAAA4C,EAAA,KACzBH,EAAAxL,MAAAyD,KAAAjC,UAAA,CAAA,SAMqBiL,EAA4BC,EAAAC,GAAA,OAAAC,EAAA5M,MAAAyD,KAAAjC,UAAA,CAGlD,SAAAoL,IADC,OACDA,EAAAnB,EAAA/C,IAAAgD,MAHO,SAAAmB,EAA4CC,EAAUrH,GAAc,OAAAiD,IAAAC,MAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA9O,MAAA,KAAA,EAAA,OAAA8O,EAAA9O,KAAA,EAC1DoN,EAAkB,WAAA,IAAA2B,EAAAvB,EAAA/C,IAAAgD,MAAC,SAAAuB,EAAOC,GAAe,OAAAxE,IAAAC,MAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAAlP,MAAA,KAAA,EAAA,OAAAkP,EAAAlP,KAAA,EAAWmP,YAAYC,qBAAqBP,EAAQT,EAAA,CAAA,EAAOa;AAAkB,KAAA,EAAA,OAAAC,EAAAX,OAAAW,SAAAA,EAAAZ;AAAA,KAAA,EAAA,IAAA,MAAA,OAAAY,EAAApE,OAAA,GAAAkE,EAAA;AAAA,OAAA,SAAAK,GAAA,OAAAN,EAAAhN,MAAAyD,KAAAjC,UAAA,CAAA,CAApG,GAAsGiE;AAAe,KAAA,EAAA,OAAAsH,EAAAP,OAAAO,SAAAA,EAAAR;AAAA,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAAhE,OAAA,GAAA8D,EAAA,KACvJD,EAAA5M,MAAAyD,KAAAjC,UAAA,CAAA,SAMqB+L,EAAmBC,EAAAC,GAAA,OAAAC,GAAA1N,MAAAyD,KAAAjC,UAAA,CAAA,SAAAkM,KAEzC,OAFyCA,GAAAjC,EAAA/C,IAAAgD,MAAlC,SAAAiC,EAAmC1H,EAAQR,GAAc,OAAAiD,IAAAC,MAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA3P,MAAA,KAAA,EAAA,OAAA2P,EAAA3P,KAAA,EAC/CoN,EAAkB,WAAA,IAAAwC,EAAApC,EAAA/C,IAAAgD,MAAC,SAAAoC,EAAOZ,GAAe,OAAAxE,IAAAC,MAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAA9P,MAAA,KAAA,EAAc,OAAd8P,EAAA3B,GAAQnG,EAAM8H,EAAA9P,KAAA,EAAkBmP,YAAYY,YAAY/H,EAAMoG,EAAA,CAAA,EAAOa;AAAkB,KAAA,EAAA,OAAAa,EAAAzB,GAAAyB,EAAAxB,KAAAwB,EAAAvB,OAAA,SAAA,CAA/EvG,OAAM8H,EAAA3B,GAAElK,SAAQ6L,EAAAzB;AAAA,KAAA,EAAA,IAAA,MAAA,OAAAyB,EAAAhF,OAAA,GAAA+E,EAAA;AAAkE,OAAA,SAAAG,GAAA,OAAAJ,EAAA7N,MAAAyD,KAAAjC,UAAA,CAAA,CAAjH,GAAmHiE;AAAe,KAAA,EAAA,OAAAmI,EAAApB,OAAAoB,SAAAA,EAAArB;AAAA,KAAA,EAAA,IAAA,MAAA,OAAAqB,EAAA7E,OAAA,GAAA4E,EAAA,KACrKD,GAAA1N,MAAAyD,KAAAjC,UAAA,CAAA,ICzBa0M,YAAuBC,GAChC,SAAAD,EAAYE,EAAiBC,GAAgB,OAAApM,OAAAiM,GAAA3O,OAAA2O,EAAA,CAAA,+DAAAlI,OAC4BoI,WAAepI,OAA2B,GAAnBoI,EAAuB,GAAK,IAAGpI,qCAAAA,OAAoCqI,EAAc,2DAChL,CAAA,OAH+BnO,EAAAgO,EAG/BxN,EAHwC0K,QAGxC1I,EAAAwL,EAAA;AAELI,EAkFK9Q,OAAO+Q;AAAO,IA7EbC,GAAgB,WA6DlB,SAAAA,EAAYC,EAAYC,EAAWC,EAAeC,GAAc3M,OAAAuM,GAAA3L,EAAAY,KAAA,kBAAA,GAAAZ,EAAAY,KAAA,iBAAA,GAAAZ,EAAAY,KAAA,qBAAA,GAzDpEZ,EAAAY,KAAA,aAAA,GAAAZ,EAAAY,KAAA,qBAAA,GAAAZ,cAGW,MAAIA,EAAAY,KAAA,eAAA,GAAAZ,EAAAY,KAAA,gBAAA,GAAAZ,EAAAY,KAAA,aAAA,GAuDPA,KAAKgL,WAAaA,EAClBhL,KAAKiL,UAAYA,EACjBjL,KAAKkL,cAAgBA,EACrBlL,KAAKoL,QAAU7G,EAAmB0G,GAAWI,OAC7CrL,KAAKsL,SAAW/G,EAAmB0G,GAAWM,QAC9CvL,KAAKwL,MAAQjH,EAAmB0G,GAAWQ,KAC3CzL,KAAK0L,cAAgBP,GAAgB,EACjCA,GACAnL,KAAK2L,KAAO3L,KAAKoL,QAAQD,EAAenL,KAAKkL,eAC7ClL,KAAK4L,sBAAsB5L,KAAK2L,KAAMR,IAGtCnL,KAAK2L,KAAO,KAChB3L,KAAK4L,sBAAsB5L,KAAK2L,MAAQ,EAAGR,GAAgB,EAC9D,CAKA,OALAlM,EAAA8L,EAAA,CAAA,CAAA/L,IAAA,wBAAApE,MAjED,SAAsBiR,EAAYC,GAC9B9L,KAAK+L,MAAQ,IAAI/L,KAAKgL,WAAWhL,KAAKiL,UAAUrI,QAAQC,OAAOC,OAAQ+I,EAAYC,EACtF,GACL,CAAA9M,IAAA,MAAApE,MAKI,SAAIoR,GAAmB,IAAZC,EAAMlO,UAAAlD,OAAA,QAAAwC,IAAAU,UAAA,GAAAA,UAAA,GAAG;AAChBiC,KAAK+L,MAAMnO,IAAIoO,EAAOC,EACzB,GACL,CAAAjN,IAAA,SAAApE,MAKI,SAAOoR,GACH,IAAME,EAAcF,EAAM7F,WAAanG,KAAK+L,MAAMI;AAClD,GAAIlG,KAAKmG,MAAMF,IAAgBA,EAC3B,MAAM,IAAIzB,GAAwBuB,EAAM7F,WAAYnG,KAAK+L,MAAMI;AAEnEnM,KAAKqM,OAAOH,GACZlM,KAAKpC,IAAI,IAAIoC,KAAKgL,WAAWgB,GAChC,GACL,CAAAhN,IAAA,KAAApE,MAGI,SAAG6G,GAAS,OAAOzB,KAAK+L,MAAMO,GAAG7K,EAAS,GAC9C,CAAAzC,IAAA,SAAApE,MAQI,SAAOkR,GACH,GAAIA,GAAY9L,KAAK0L,cAAe,CAChC,IAAMa,EAAeT,EAAW9L,KAAKkL;AACjClL,KAAK2L,KACL3L,KAAK2L,KAAO3L,KAAKsL,SAAStL,KAAK2L,KAAMY,GAErCvM,KAAK2L,KAAO3L,KAAKoL,QAAQmB,GAC7BvM,KAAK4L,sBAAsB5L,KAAK2L,KAAMG,EACzC,CACJ,GACL,CAAA9M,IAAA,UAAArB,IAGI,WAAgB,OAAOqC,KAAK2L,IAAO,GAAA,CAAA3M,IAAA6L,EAAAjQ,MAiBnC,WACQoF,KAAK2L,MACL3L,KAAKwL,MAAMxL,KAAK2L,KAEvB,KAAAZ,CAAA,CAjFiB,GAyFTyB,YAAuBC,GAChC,SAAAD,EAAY/N,EAAU0M,GAAc,OAAA3M,OAAAgO,GAAA1Q,EAAA0Q,KAAAA,EAAQE,CAAAA,kBAAmBjO,EAAU,EAAG0M,GAAgB,CAAA,OAD5D1O,EAAA+P,EAASzB,IACmD9L,EAAAuN,EAAA,IC3FnFG,GAAW,CACpBtJ,IAAK,CAAEuJ,mCZLJ,SAA4CC,GAC/C7M,KAAKmC,cAAc,IAAIT,EAA0B1B,KAAM6M,GAC3D,EYG+CC,gCbLxC,SAAyCrL,GAC5CzB,KAAKmC,cAAc,IAAIb,EAAkBtB,KAAMyB,GACnD,GaII0B,uBAAwB,CAAE4J,SJWvB,SAAkBC,EAAIC,EAAKC,EAAQC,GAAM,IAAAC,EAAApN,KACxCqN,EAAW,EAGTC,EAAgBC,EAFVlU,EAAW2G,KAAMiN,EAAKC,IAEHvJ,KAAI,SAAA6J,GAAmC,IAAhC3I,EAAW2I,EAAX3I,YAAaC,EAAY0I,EAAZ1I;AAA+C,OAA1BuI,GAAYvI,EAAqB,IAAI2I,WAAW1J,EAAUqJ,EAAK3O,UAAUqE,OAAQ+B,EAAaC,EAAc,IAC9KxC,EAAQ,IAAIkE,EAAyBwG,EAAIM;AAC/C,GAAItN,KAAKmC,cAAcG,GAAQ,CAC3B,IAAMoL,EAAMpL,EAAMqL,SAAS;AAC3B,GAAU,GAANX,EACA5K,QAAQwL,IAAIF;IACX,IAAU,GAANV,EAGL,OAAOxH,EAAQqI;AAFfzL,QAAQ0L,MAAMJ,EAEK,CAC1B,CAED,OADAtJ,EAAYpE,KAAKvB,SAAU0O,EAAME,GAC1B,CACX,EI5BwCU,UHCjC,SAAmBxG,GAEtB,MADAvH,KAAKmC,cAAc,IAAIkF,EAAWE,IAC5B,IAAIE,EAAWF,EACzB,EGJmDyG,SRL5C,SAAkBhB,GACrB,IAAM1K,EAAQ,IAAIkC,EAAyBwI;AACvChN,KAAKmC,cAAcG,EAE3B,EQC6D2L,QNyBtD,SAAiBjB,EAAIC,EAAKC,EAAQC,GACrC,IAAIE,EAAW,EACTa,EAAM7U,EAAW2G,KAAMiN,EAAKC,GAG5B5K,EAAQ,IAAImD,EAAwBzF,KAAMgN,EAAEO,EAAMW;AAaxD,OAXIb,EADArN,KAAKmC,cAAcG,GACR,EAQAA,EAAM6L,eAErB/J,EAAYpE,KAAKvB,SAAU0O,EAAME,GAC1B,CACX,EM5CsEe,QLJ/D,SAAiBpB,EAAIf,EAAQoC,EAAQC,GACxC,OAAQtB,GACJ,KAAK,EAEL,KAAK,EAEL,KAAK,EACD;AACJ,QACI,GAAIhN,KAAKmC,cAAc,IAAImE,EAAwB0G,IAC/C,OAAOxH,EAAQqI,KAE3B,OAAO,CACX,EKT+EU,YCXxE,SAAqBC,EAAoBC,GAG5C,OAFArK,EAAYpE,KAAKvB,SAAU+P,EAAoB,GAC/CpK,EAAYpE,KAAKvB,SAAUgQ,EAAmB,GACvC,CACX,EDO4FC,kBTXrF,SAA2BF,EAAoBC,GAGlD,OAFArK,EAAYpE,KAAKvB,SAAU+P,EAAoB,GAC/CpK,EAAYpE,KAAKvB,SAAUgQ,EAAmB,GACvC,CACX,ISYAE,GAA+EpL,QAAQkF,gBAAtEmG,GAAWD,GAApBjG,QAA+BmG,GAAaF,GAAtBzM,QAAgC4M,GAAYH,GAApBI,OACtDC,GAAyEzL,QAAQkF,gBAAhEwG,GAASD,GAAlBtG,QAA6BJ,GAAW0G,GAApB9M,QAA8BgN,GAAUF,GAAlBD,OAE9CI,GAA6D;AAEjE,SAASC,KAAgH,OAAOD,IAAY,CAAA,CAAK,CAAA,SAClIE,KAAY,OAAAC,GAAA/S,MAAAyD,KAAAjC,UAAA,CAE3B,SAAAuR,KAFiE,OAEjEA,GAAAtH,EAAA/C,IAAAgD,MAFA,SAAAsH,IAAA,OAAAtK,IAAAC,MAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAhV,MAAA,KAAA,EAAA,OAAAgV,EAAAhV,KAAA,EAA8CyU;AAAS,KAAA,EAAA,GAAAO,EAAA7G,GAAA6G,EAAA1G,KAAA0G,EAAA7G,GAAA,CAAA6G,EAAAhV,KAAA;AAAA,KAAA,CAAAgV,EAAA7G,GAAK,CAAE;AAAA,KAAA,EAAA,OAAA6G,EAAAzG,OAAAyG,SAAAA,EAAA7G;AAAA,KAAA,EAAA,IAAA,MAAA,OAAA6G,EAAAlK,OAAA,GAAAiK,EAAA,MAAGhT,MAAAyD,KAAAjC,UAAA,CASjE,SAAS0R,GAAcC,GACnB,IACIb,GAAca,EACjB,CACD,MAAO7C,GACHiC,GAAajC,EAChB,CACL,CElCM,SAAU8C,GAAcC,GAC1B,IAAM3V,EAAIsK,EAAmB6K,KAAe3Q;AAC5C,OAAQmR,GACJ,IAAK,QAAS,OAAO3V,EAAE4V;AACvB,IAAK,UAAW,OAAO5V,EAAE6V;AACzB,IAAK,UAAW,OAAO7V,EAAE8V;AACzB,IAAK,SAAU,OAAO9V,EAAE+V;AACxB,IAAK,SAAU,OAAO/V,EAAEgW;AACxB,IAAK,aAAc,OAAOhW,EAAEiW;AAC5B,IAAK,QAAS,OAAOjW,EAAEkW;AACvB,IAAK,OAAQ,OAAOlW,EAAEmW;AACtB,IAAK,MAAO,OAAOnW,EAAEoW;AACrB,IAAK,SAAU,OAAOpW,EAAEqW;AACxB,IAAK,SAAU,OAAOrW,EAAEsW;AACxB,IAAK,OAAQ,OAAOtW,EAAEuW;AACtB,IAAK,OAAQ,OAAOvW,EAAEwW;AACtB,IAAK,UAAW,OAAOxW,EAAEyW;AACzB,IAAK,kBAAmB,OAAOzW,EAAE0W;AACjC,IAAK,aAAc,OAAO1W,EAAE2W;AAC5B,IAAK,cAAe,OAAO3W,EAAE4W;AAC7B,IAAK,cAAe,OAAO5W,EAAE6W;AAC7B,IAAK,WAAY,OAAO7W,EAAE8W;AAC1B,IAAK,cAAe,OAAO9W,EAAE+W;AAC7B,IAAK,OAAQ,OAAO/W,EAAEgX;AACtB,IAAK,WAAY,OAAOhX,EAAEiX,iBAElC,CFwBAlJ,EAAA/C,IAAAgD,MAAC,SAAAkJ,IAAA,IAAA9R;AAAA,OAAA4F,IAAAC,MAAA,SAAAkM,GAAA,cAAAA,EAAAhM,KAAAgM,EAAA5W,MAAA,KAAA,EAAA,OAAA4W,EAAAhM,KAAA,EAAAgM,EAAA5W,KAAA,EAEyBoU;AAAW,KAAA,EAApB,GACS,iBADZvP,EAAG+R,EAAAtI,MACiB,CAAAsI,EAAA5W,KAAA;AAAA,KAAA,CACX,OADW4W,EAAAzI,GACtBL,GAAW8I,EAAA5W,KAAA,EAAkBwO,EAA6BqI,MAAM,IAAIC,IAAIjS,cAAiBkS,MAAO5E;AAAS,KAAA,EAAAyE,EAAAvI,GAA7FsG,GAAQiC,EAAAtI,MAAA,EAAAsI,EAAAzI,IAAAyI,EAAAvI,IAAAuI,EAAA5W,KAAA;AAAA;AAAA,KAAA,GAAA,KAEf6E,aAAemS,UAAQ,CAAAJ,EAAA5W,KAAA;AAAA,KAAA,CACjB,OADiB4W,EAAAK,GAC5BnJ,GAAW8I,EAAA5W,KAAA,GAAkBwO,EAA6B3J,EAAKsN;AAAS,KAAA,GAAAyE,EAAAM,GAA5DvC,GAAQiC,EAAAtI,MAAA,EAAAsI,EAAAK,IAAAL,EAAAM,IAAAN,EAAA5W,KAAA;AAAA;AAAA,KAAA,GAAA,KAEf6E,aAAesS,aAAetS,aAAesK,YAAYiI,QAAM,CAAAR,EAAA5W,KAAA;AAAA,KAAA,CACzD,OADyD4W,EAAAS,GACpEvJ,GAAW8I,EAAA5W,KAAA,GAAkBsP,EAAoBzK,EAAKsN;AAAS,KAAA,GAAAyE,EAAAU,GAAnD3C,GAAQiC,EAAAtI,MAAA,EAAAsI,EAAAS,IAAAT,EAAAU;AAAA,KAAA,GAAAV,EAAA5W,KAAA;AAAA;AAAA,KAAA,GAAA4W,EAAAhM,KAAA,GAAAgM,EAAAW,GAAAX,EAAA,MAAA,GAIxBlC,GAAUkC,EAAAW;AAAI,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAA9L,OAAA,GAAA6L,EAAA,KAAA,CAAA,CAAA,EAAA,KAAA,IAdtBnJ;AG/CA,IAAIgK,QAAsE3U;AAyBpE,SAAU4U,GAAOvL,EAAyBwL,EAA6BC,EAAgCC,GACzG,IAAQ3T,EAAa2Q,KAAb3Q,SACF4T,EA1BV,WACI,IAAQ5T,EAAa2Q,KAAb3Q;AACR,OAAIA,GAA8CpB,MAAlC2U,GACLA,GAAiC,IAAIxF,GAAwB/N,EAAU,MAE3EuT,EACX,CAoByBM;AAErB,GAAgB,MAAZ7T,GAAoC,MAAhB4T,EACpB,MAAO,CAAE3L,KAAM,KAAMoH,MAAO;AAEhC,GAAmB,GAAfpH,EAAK7L,QAAuB,MAAR6L,EACpB,MAAO,CAAEA,KAAM,KAAMoH,MAAO;AAEhCuE,EAAaE,OAAO7L;AAEpB,IAAM8L,EAAWjO,EAAmB9F,GAAUgU,qBACxCC,EAASnO,EAAmB9F,GAAUkU;AAC5CpO,EAAmB9F,GAAUmU,SAASP,EAAaQ,QAAUnM,EAAKP,WAAwB,UAAZ+L,EAAuBM,EAAWE,EAAQ/C,GAAcwC,GAASC;AAG/I,IAAMU,EAAoBvO,EAAmB9F,GAAUsU,wBACjDC,EAAuBzO,EAAmB9F,GAAUwU,0BACpDC,EAAsB3O,EAAmB9F,GAAU0U,yBACnDC,EAAuB7O,EAAmB9F,GAAU4U,0BACpDzD,EAAQ,IAAIlD,kBAAkBnI,EAAmB9F,GAAUoE,OAAOC,OAAQgQ,EAAmBE,GAC7FM,EAAS,IAAI5G,kBAAkB,IAAIiF,YAAYqB;AAIrD,OAHAM,EAAO1V,IAAIgS,GAGJ2D,EAAS,CACZ7M,KAAM4M,EAAOxQ,OACb0Q,MAAON,EACPO,OAAQL,GACT,CAACE,EAAOxQ,QACf,kDCvDI4Q,QAAqErW;AAEzE,SAASsW,KACL,IAAQlV,EAAa2Q,KAAb3Q;AACR,OAAIA,GAA6CpB,MAAjCqW,GACLA,GAAgC,IAAIlH,GAAwB/N,EAAU,MAE1EiV,EACX,CA6CM,SAAUE,GAAQC,EAAkCL,EAAeC,GACrE,OAAAlG,EA3CJ,SAAesG,EAAkCL,EAAeC,GAAc,IAAEtB,EAAApU,UAAAlD,OAAA,QAAAwC,IAAAU,UAAA,GAAAA,UAAA,GAAiC;AAAQ,OAAAkH,IAAAgD,MAAA,SAAA6L,IAAA,IAAAC,EAAAtV,EAAAiV,EAAAM,EAAAxa,EAAAya,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/N,EAAAK;AAAA,OAAA9B,IAAAC,MAAA,SAAAwP,GAAA,cAAAA,EAAAtP,KAAAsP,EAAAla,MAAA,KAAA,EAE9D,GAF8DuZ,EAChG3E,KAAb3Q,EAAQsV,EAARtV,SACFiV,EAAgCC,KAEtB,MAAZlV,GAAqD,MAAjCiV,EAAqC,CAAAgB,EAAAla,KAAA;AAAA,KAAA,CAAA,OAAAka,EAAA3L,OAAA,SAClD;AAAI,KAAA,EAEf2K,EAA8BrH,OAAOwH,EAAchZ,QACnD6Y,EAA8B9V,IAAIiW,GAC9BG,EAAczP,EAAmB9F,GAAUkW,KAAKjB,EAA8Bb,QAAUW,EAAOC,EAAQ9D,GAAcwC,IAAS,GAEzH3Y,EAAI;AAAC,KAAA,EAAA,KAAEA,EAAIwa,GAAW,CAAAU,EAAAla,KAAA;AAAA,KAAA,CA2B3B,OA1BMyZ,EAAe1P,EAAmB9F,GAAUmW,0BAC5CV,EAAgB3P,EAAmB9F,GAAUoW,wBAC7CV,EAAa5P,EAAmB9F,GAAUqW,0BAC1CV,EAAgB7P,EAAmB9F,GAAUsW,wBAC7CV,EAAc9P,EAAmB9F,GAAUuW,2BAC3CV,EAAO/P,EAAmB9F,GAAUwW,oBACpCV,EAAa,CAAC,EAAG,EAAG,EAAG,GAAa5Q,KAAI,SAAAnK,GAAC,MAAK,CAChD0b,EAAG3Q,EAAmB9F,GAAW0W,yBAAyB3b,GAC1D4b,EAAG7Q,EAAmB9F,GAAW4W,yBAAyB7b,GAC7D,IAEKgb,EAAQ,IAAIvN,YAAY,SAAUE,OAAO,IAAIsG,WAAW1J,EAAUtF,GAAUqE,OAAQoR,EAAeD,IACnGQ,EAAa,IAAI9C,YAAYwC,IAC7BzN,EAAO,IAAI+G,WAAWgH,IACvB7W,IAAI,IAAI6P,WAAWlJ,EAAmB9F,GAAUoE,OAAOC,OAAQsR,EAAeD,IAEnF5P,EAAmB9F,GAAU6W,aAEzBvO,EAAkB,CAClByN,KAAAA,EACA9N,KAAAA,EACA6N,UAAAA,EACAF,YAAAA,EACAC,KAAAA,GACHI,EAAAla,KAAA,GAEKuM;AAAG,KAAA,KA3BsBvN,EAACkb,EAAAla,KAAA;AAAA;AAAA,KAAA,GAAA,IAAA,MAAA,OAAAka,EAAApP,OAAA,GAAAwO,EAAA,GAXiF7O,EAWjF,CAgCzB0P,CAAKd,EAAeL,EAAOC,EAD+C1V,UAAAlD,OAAA,QAAAwC,IAAAU,UAAA,GAAAA,UAAA,GAAiC,UAE1H;SCrCsBwX,KAAc,OAAAC,GAAAjZ,MAAAyD,KAAAjC,UAAA,CAAA,SAAAyX,KAGpC,OAHoCA,GAAAxN,EAAA/C,IAAAgD,MAA7B,SAAAwN,IAAA,OAAAxQ,IAAAC,MAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAAlb,MAAA,KAAA,EAAA,OAAAkb,EAAAlb,KAAA,EACG6U;AAAc,KAAA,EAAA,OAAAqG,EAAA3M,OAAA;AAAA,KAAA,EAAA,IAAA,MAAA,OAAA2M,EAAApQ,OAAA,GAAAmQ,EAAA,MAExBlZ,MAAAyD,KAAAjC,UAAA;ACvBA4X,EAAM/M,EAAAA,EAAAA,EAAMgN,CAAAA,EAAAA,IAAYC,IAAYC;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17]}